#version 130
#extension GL_ARB_shading_language_420pack : require

#define SHADER_GBUFFERS_TERRAIN
#define OVERWORLD
#define FSH

// OptiFine Settings (DON'T DELETE)
/*
const bool colortex1Clear = false;
const int colortex2Format = RGB16F;
const int colortex4Format = RGB32F;
const float wetnessHalflife = 50.0f;
const float drynessHalflife = 50.0f;
const float centerDepthHalflife = 2.5f;
const bool shadowtex0Mipmap = false;
const bool shadowtex1Mipmap = false;
const bool shadowtex0Clear = false;
const bool shadowtex1Clear = false;
*/





// User Settings

#define STYLE 0 // [0 1 2]

#define DARKEN_SKY_UNDERGROUND -1 // [-1 0 1]
#define STARS_BRIGHTNESS -1 // [-1 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.5 3.0 3.5 4.0 4.5 5.0]
#define DARKEN_STARS_NEAR_BLOCKLIGHT -1 // [-1 0 1]
#define DARKENED_STARS_BRIGHTNESS -1 // [-1 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.5 3.0 3.5 4.0 4.5 5.0]
#define WEATHER_TRANSPARENCY -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define CLOUD_TRANSPARENCY -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define HIDE_NEARBY_CLOUDS -1 // [-1 0 1]



#define FOG_ENABLED -1 // [-1 0 1]
#define FOG_HEIGHT_SCALE -1 // [-1 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0 3.1 3.2 3.3 3.4 3.5 3.6 3.7 3.8 3.9 4.0 4.1 4.2 4.3 4.4 4.5 4.6 4.7 4.8 4.9 5.0 5.5 6.0 6.5 7.0 7.5 8.0 8.5 9.0 9.5 10.0]
#define FOG_EXTRA_CLOUDS_DISTANCE -1 // [-1 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0 3.1 3.2 3.3 3.4 3.5 3.6 3.7 3.8 3.9 4.0 4.1 4.2 4.3 4.4 4.5 4.6 4.7 4.8 4.9 5.0 5.5 6.0 6.5 7.0 7.5 8.0 8.5 9.0 9.5 10.0]
#define FOG_CURVE -1 // [-1 1 2 3 4 5]

#define FOG_AIR_START -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define FOG_AIR_END -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define FOG_AIR_MIN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define FOG_AIR_RAIN_START -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define FOG_AIR_RAIN_END -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define FOG_AIR_RAIN_MIN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define FOG_WATER_START -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define FOG_WATER_END -1 // [-1 1 2 3 4 5 6 7 8 9 10 15 20 25 30 35 40 45 50 60 70 80 90 100 125 150 175 200]
#define FOG_WATER_MIN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define FOG_LAVA_START -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define FOG_LAVA_END -1 // [-1 1 2 3 4 5 6 7 8 9 10 15 20 25 30 35 40 45 50 60 70 80 90 100 125 150 175 200]
#define FOG_LAVA_MIN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define FOG_POWDERED_SNOW_START -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define FOG_POWDERED_SNOW_END -1 // [-1 1 2 3 4 5 6 7 8 9 10 15 20 25 30 35 40 45 50 60 70 80 90 100 125 150 175 200]
#define FOG_POWDERED_SNOW_MIN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]



#define BLOCK_RED -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define BLOCK_GREEN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define BLOCK_BLUE -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define BLOCK_BRIGHTNESS -1 // [-1 0.0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0, 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]
#define BLOCK_BRIGHTNESS_CURVE -1 // [-1 1 2 3 4 5]



#define CAVE_AMBIENT_RED -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define CAVE_AMBIENT_GREEN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define CAVE_AMBIENT_BLUE -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define CAVE_AMBIENT_BRIGHTNESS -1 // [-1 0.0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0, 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]



#define SKYLIGHT_DAY_RED -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SKYLIGHT_DAY_GREEN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SKYLIGHT_DAY_BLUE -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SKYLIGHT_DAY_BRIGHTNESS -1 // [-1 0.0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29 0.3 0.31 0.32 0.33 0.34 0.35 0.36 0.37 0.38 0.39 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0, 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]

#define AMBIENT_DAY_RED -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define AMBIENT_DAY_GREEN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define AMBIENT_DAY_BLUE -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define AMBIENT_DAY_BRIGHTNESS -1 // [-1 0.0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29 0.3 0.31 0.32 0.33 0.34 0.35 0.36 0.37 0.38 0.39 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0, 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]



#define SKYLIGHT_NIGHT_RED -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SKYLIGHT_NIGHT_GREEN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SKYLIGHT_NIGHT_BLUE -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SKYLIGHT_NIGHT_BRIGHTNESS -1 // [-1 0.0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29 0.3 0.31 0.32 0.33 0.34 0.35 0.36 0.37 0.38 0.39 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0, 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]

#define AMBIENT_NIGHT_RED -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define AMBIENT_NIGHT_GREEN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define AMBIENT_NIGHT_BLUE -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define AMBIENT_NIGHT_BRIGHTNESS -1 // [-1 0.0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29 0.3 0.31 0.32 0.33 0.34 0.35 0.36 0.37 0.38 0.39 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0, 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]



#define SKYLIGHT_SUNRISE_RED -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SKYLIGHT_SUNRISE_GREEN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SKYLIGHT_SUNRISE_BLUE -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SKYLIGHT_SUNRISE_BRIGHTNESS -1 // [-1 0.0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29 0.3 0.31 0.32 0.33 0.34 0.35 0.36 0.37 0.38 0.39 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0, 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]

#define AMBIENT_SUNRISE_RED -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define AMBIENT_SUNRISE_GREEN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define AMBIENT_SUNRISE_BLUE -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define AMBIENT_SUNRISE_BRIGHTNESS -1 // [-1 0.0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29 0.3 0.31 0.32 0.33 0.34 0.35 0.36 0.37 0.38 0.39 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0, 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]



#define SKYLIGHT_SUNSET_RED -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SKYLIGHT_SUNSET_GREEN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SKYLIGHT_SUNSET_BLUE -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SKYLIGHT_SUNSET_BRIGHTNESS -1 // [-1 0.0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29 0.3 0.31 0.32 0.33 0.34 0.35 0.36 0.37 0.38 0.39 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0, 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]

#define AMBIENT_SUNSET_RED -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define AMBIENT_SUNSET_GREEN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define AMBIENT_SUNSET_BLUE -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define AMBIENT_SUNSET_BRIGHTNESS -1 // [-1 0.0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29 0.3 0.31 0.32 0.33 0.34 0.35 0.36 0.37 0.38 0.39 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0, 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]





#define SHADOWS_ENABLED -1 // [-1 0 1]
#define EXCLUDE_FOLIAGE -1 // [-1 0 1]
#define SHADOW_FILTERING -1 // [-1 0 1 2 3]
#define SHADOWS_NOISE -1 // [-1 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0]
#define SHADOW_DISTORT_ADDITION -1 // [-1 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.2 0.25 0.3]
#define SIDE_SHADING -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define RAIN_LIGHT_MULT -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define USE_VANILLA_BRIGHTNESS -1 // [-1 0 1]
#define BLOCKLIGHT_FLICKERING_ENABLED -1 // [-1 0 1]



#define HANDHELD_LIGHT_ENABLED -1 // [-1 0 1]
#define HANDHELD_LIGHT_DISTANCE -1 // [-1 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 35 40 45 50 60 70 80 90 100]
#define HANDHELD_LIGHT_BRIGHTNESS -1 // [-1 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0]





#define WATER_REFLECTIONS_ENABLED -1 // [-1 0 1]
#define WATER_REFLECTION_AMOUNT -1 // [-1 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0]
#define WATER_REFLECTION_FRESNEL -1 // [-1 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0]

#define RAIN_REFLECTIONS_ENABLED -1 // [-1 0 1]
#define RAIN_REFLECTION_COVERAGE -1 // [-1 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0]
#define RAIN_REFLECTION_MIN -1 // [-1 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0]
#define RAIN_REFLECTION_SLOPE -1 // [-1 0.5 0.6 0.7 0.8 0.9 1.0 1.2 1.4 1.6 1.8 2.0 2.2 2.4 2.6 2.8 3.0 3.5 4.0 4.5 5.0 6.0 7.0 8.0 9.0 10.0]
#define RAIN_REFLECTION_AMOUNT -1 // [-1 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0]
#define RAIN_REFLECTION_FRESNEL -1 // [-1 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0]

#define REFLECTION_ITERATIONS -1 // [-1 20 25 30 35 40 45 50 55 60 65 70 80 90 100]
#define REFLECTION_STEP_INCREASE -1 // [-1 1.0 1.05 1.1 1.15 1.2 1.3 1.4 1.5 1.6 1.8 2.0 2.25 2.5 2.75 3.0 3.5 4.0 5.0]



#define SSAO_ENABLED -1 // [-1 0 1]
#define AO_AMOUNT -1 // [-1 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]
#define AO_SIZE -1 // [-1 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.25 2.5 2.75 3.0]
#define AO_QUALITY -1 // [-1 2 3 4 5 6 7 8 9 10]
#define SSAO_APPLICATION_TYPE -1 // [-1 1 2]



#define BLOOM_ENABLED -1 // [-1 0 1]
#define BLOOM_AMOUNT -1 // [-1 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.5 3.0 3.5 4.0 4.5 5.0 6.0 7.0 8.0 9.0 10.0]
#define BLOOM_QUALITY -1 // [-1 2 3 4]
#define BLOOM_COMPUTE_COUNT -1 // [-1 1 2 3 5 7 10]
#define BLOOM_LOW_CUTOFF -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define BLOOM_HIGH_CUTOFF -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define BLOOM_SIZE -1 // [-1 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.5 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0]
#define BLOOM_NETHER_MULT -1 // [-1 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.5 3.0 3.5 4.0 4.5 5.0]
#define BLOOM_SKY_BRIGHTNESS -1 // [-1 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5]
#define BLOOM_ENTITY_BRIGHTNESS -1 // [-1 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5]
#define BLOOM_CLOUD_BRIGHTNESS -1 // [-1 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5]
#define BLOOM_HAND_BRIGHTNESS -1 // [-1 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5]



#define DEPTH_SUNRAYS_ENABLED -1 // [-1 0 1]
#define VOL_SUNRAYS_ENABLED -1 // [-1 0 1]
#define SUNRAYS_STYLE -1 // [-1 1 2]
#define SUNRAYS_QUALITY -1 // [-1 3 4 5 6 7 8 9 10]
#define SUNRAYS_FLICKERING_FIX -1 // [-1 0 1]
#define SUNRAYS_AMOUNT_DAY -1 // [-1 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.25 2.5 2.75 3.0]
#define SUNRAYS_AMOUNT_NIGHT -1 // [-1 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.25 2.5 2.75 3.0]
#define SUNRAYS_AMOUNT_SUNRISE -1 // [-1 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.25 2.5 2.75 3.0]
#define SUNRAYS_AMOUNT_SUNSET -1 // [-1 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.25 2.5 2.75 3.0]
#define SUNRAYS_SUN_RED -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SUNRAYS_SUN_GREEN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SUNRAYS_SUN_BLUE -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SUNRAYS_MOON_RED -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SUNRAYS_MOON_GREEN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]
#define SUNRAYS_MOON_BLUE -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0 1.01 1.02 1.03 1.04, 1.05 1.06 1.07 1.08 1.09 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0]



#define DOF_ENABLED -1 // [-1 0 1]
#define DOF_NEAR_BLUR_START -1 // [-1 0.0 0.01 0.02 0.03 0.04 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.6 0.7 0.8 0.9]
#define DOF_NEAR_BLUR_SLOPE -1 // [-1 0.01 0.02 0.03 0.04 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.5 0.6 0.7 0.8 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0]
#define DOF_NEAR_BLUR_STRENGTH -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]
#define DOF_NEAR_BLUR_SIZE -1 // [-1 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]
#define DOF_FAR_BLUR_START -1 // [-1 0.0 0.01 0.02 0.03 0.04 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.6 0.7 0.8 0.9]
#define DOF_FAR_BLUR_SLOPE -1 // [-1 0.01 0.02 0.03 0.04 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.5 0.6 0.7 0.8 0.9 0.91 0.92 0.93 0.94 0.95 0.96 0.97 0.98 0.99 1.0]
#define DOF_FAR_BLUR_STRENGTH -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]
#define DOF_FAR_BLUR_SIZE -1 // [-1 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]
#define DOF_SLOPE_TYPE -1 // [-1 1 2]
#define DOF_LOCKED_FOCAL_PLANE -1 // [-1 -1 0 1]
#define DOF_FOCAL_PLANE_DISTANCE -1 // [-1 0 1 2 3 4 5 6 7 8 9 10 12 14 16 18 20 22 24 26 28 30 35 40 45 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 220 240 260 280 300 320 340 360 380 400 450 500 550 600 650 700 750 800 850 900 950 1000]



#define TAA_ENABLED -1 // [-1 0 1]



#define MOTION_BLUR_ENABLED -1 // [-1 0 1]
#define MOTION_BLUR_AMOUNT -1 // [-1 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0]
#define MOTION_BLUR_QUALITY -1 // [-1 2 3 4 5 6 7 8 9 10]



#define SHARPENING_ENABLED -1 // [-1 0 1]
#define SHARPEN_AMOUNT -1 // [-1 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define SHARPEN_VEL_ADDITION -1 // [-1 0.0 0.2 0.4 0.6 0.8 1.0 1.2 1.4 1.6 1.8 2.0 2.5 3.0 3.5 4.0]
#define SHARPENING_DETECT_SIZE -1 // [-1 3 5 7]



#define GAMMA -1 // [-1 -15 -14 -13 -12 -11 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]
#define BRIGHTNESS -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0]

#define SATURATION -1 // [-1 -1.5 -1.45 -1.4 -1.35 -1.3 -1.25 -1.2 -1.15 -1.1 -1.05 -1.0 -0.95 -0.9 -0.85 -0.8 -0.75 -0.7 -0.65 -0.6 -0.55 -0.5 -0.45 -0.4 -0.35 -0.3 -0.25 -0.2 -0.15 -0.1 -0.05 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5]
#define SATURATION_DARK -1 // [-1 -1.5 -1.45 -1.4 -1.35 -1.3 -1.25 -1.2 -1.15 -1.1 -1.05 -1.0 -0.95 -0.9 -0.85 -0.8 -0.75 -0.7 -0.65 -0.6 -0.55 -0.5 -0.45 -0.4 -0.35 -0.3 -0.25 -0.2 -0.15 -0.1 -0.05 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5]
#define SATURATION_LIGHT -1 // [-1 -1.5 -1.45 -1.4 -1.35 -1.3 -1.25 -1.2 -1.15 -1.1 -1.05 -1.0 -0.95 -0.9 -0.85 -0.8 -0.75 -0.7 -0.65 -0.6 -0.55 -0.5 -0.45 -0.4 -0.35 -0.3 -0.25 -0.2 -0.15 -0.1 -0.05 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5]

#define VIBRANCE -1 // [-1 -1.5 -1.45 -1.4 -1.35 -1.3 -1.25 -1.2 -1.15 -1.1 -1.05 -1.0 -0.95 -0.9 -0.85 -0.8 -0.75 -0.7 -0.65 -0.6 -0.55 -0.5 -0.45 -0.4 -0.35 -0.3 -0.25 -0.2 -0.15 -0.1 -0.05 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5]

#define CONTRAST -1 // [-1 -1.5 -1.45 -1.4 -1.35 -1.3 -1.25 -1.2 -1.15 -1.1 -1.05 -1.0 -0.95 -0.9 -0.85 -0.8 -0.75 -0.7 -0.65 -0.6 -0.55 -0.5 -0.45 -0.4 -0.35 -0.3 -0.25 -0.2 -0.15 -0.1 -0.05 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5]
#define CONTRAST_DETECT_RED -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define CONTRAST_DETECT_GREEN -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define CONTRAST_DETECT_BLUE -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]

#define TONEMAPPER -1 // [-1 0 1 2 3]
#define USE_GAMMA_CORRECTION -1 // [-1 0 1]



#define COLORBLIND_MODE -1 // [-1 0 1 2 3]
#define COLORBLIND_INTENSITY -1 // [-1 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]



#define VIGNETTE_ENABLED -1 // [-1 0 1]
#define VIGNETTE_AMOUNT_SURFACE -1 // [-1 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define VIGNETTE_AMOUNT_UNDERGROUND -1 // [-1 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.6 1.7 1.8 1.9 2.0 2.25 2.5 2.75 3.0]
#define VIGNETTE_SCALE -1 // [-1 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5]
#define VIGNETTE_NOISE_ENABLED -1 // [-1 0 1]



#define WAVING_ENABLED -1 // [-1 0 1]
#define WAVING_SPEED -1 // [-1 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.2 2.4 2.6 2.8 3.0 3.2 3.4 3.6 3.8 4.0 4.2 4.4 4.6 4.8 5.0 5.25 5.5 5.75 6.0 6.25 6.5 6.75 7.0 7.25 7.25 7.5 8.0 8.5 9.0 9.5 10.0]
#define WAVING_WORLD_SCALE -1 // [-1 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.21 0.22 0.23 0.24 0.25 0.26 0.27 0.28 0.29 0.3 0.31 0.32 0.33 0.34 0.35 0.36 0.37 0.38 0.39 0.4 0.41 0.42 0.43 0.44 0.45 0.46 0.47 0.48 0.49 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]
#define WAVING_AMOUNT_1 -1 // [-1 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0 3.25 2.5 2.75 4.0 4.25 4.5 4.75 5.0]
#define WAVING_AMOUNT_2 -1 // [-1 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0 3.25 2.5 2.75 4.0 4.25 4.5 4.75 5.0]
#define WAVING_AMOUNT_3 -1 // [-1 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0 3.25 2.5 2.75 4.0 4.25 4.5 4.75 5.0]
#define WAVING_RAIN_MULT -1 // [-1 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0 3.1 3.1 3.3 3.4 3.5 3.6 3.7 3.8 3.9 4.0 4.1 4.2 4.3 4.4 4.5 4.6 4.7 4.8 4.9 5.0]
#define WAVING_NIGHT_MULT -1 // [-1 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0 3.1 3.1 3.3 3.4 3.5 3.6 3.7 3.8 3.9 4.0 4.1 4.2 4.3 4.4 4.5 4.6 4.7 4.8 4.9 5.0]
#define HEIGHT_BASED_WAVING_ENABLED -1 // [-1 0 1]
// there isn't a rain speed mult because dynamically altering the speed causes the time position to go crazy. If you were to implement dynamic speed, you would need a global time pos counter that is added to each frame

#define PHYSICALLY_WAVING_WATER_ENABLED -1 // [-1 0 1]
#define WAVING_WATER_NORMALS_ENABLED -1 // [-1 0 1]

#define UNDERWATER_WAVINESS_ENABLED -1 // [-1 0 1]
#define UNDERWATER_WAVINESS_AMOUNT -1 // [-1 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0 3.25 2.5 2.75 4.0 4.25 4.5 4.75 5.0]
#define UNDERWATER_WAVINESS_SCALE -1 // [-1 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0 3.25 2.5 2.75 4.0 4.25 4.5 4.75 5.0]
#define UNDERWATER_WAVINESS_SPEED -1 // [-1 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0 3.25 2.5 2.75 4.0 4.25 4.5 4.75 5.0]



#define WATER_FRESNEL_ADDITION -1 // [-1 0 1]
#define WATER_TRANSPARENCY -1 // [-1 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0]



#define ISOMETRIC_RENDERING_ENABLED -1 // [-1 0 1]
#define ISOMETRIC_WORLD_SCALE -1 // [-1 4 8 16 32 64 128 256 512]
#define ISOMETRIC_BACKWARD_VISIBILITY -1 // [-1 0 1 2 4 8 16 32 64 128 256 512]
#define ISOMETRIC_FORWARD_VISIBILITY -1 // [-1 0 1 2 4 8 16 32 64 128 256 512]





#define USE_BETTER_RAND -1 // [-1 0 1]
#define SHOW_DANGEROUS_LIGHT -1 // [-1 0 1]
#define USE_SIMPLE_LIGHT -1 // [-1 0 1]
#define SSAO_SHOW_AMOUNT -1 // [-1 0 1]
#define BLOOM_SHOW_ADDITION -1 // [-1 0 1]
#define BLOOM_SHOW_FILTERED_TEXTURE -1 // [-1 0 1]
#define SUNRAYS_SHOW_ADDITION -1 // [-1 0 1]
#define DOF_SHOW_AMOUNTS -1 // [-1 0 1]
#define REFLECTIVE_EVERYTHING -1 // [-1 0 1]

const int shadowMapResolution = 768; // [256 384 512 768 1024 1536 2048 3072 4096 6144 8192]
const float shadowDistance = 112.0; // [64.0 80.0 96.0 112.0 128.0 160.0 192.0 224.0 256.0 320.0 384.0 512.0 768.0 1024.0]
const float sunPathRotation = -30.0; // [-80.0 -75.0 -70.0 -65.0 -60.0 -55.0 -50.0 -45.0 -40.0 -35.0 -30.0 -25.0 -20.0 -15.0 -10.0 -9.0 -8.0 -7.0 -6.0 -5.0 -4.0 -3.0 -2.0 -1.0 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 10.0 15.0 20.0 25.0 30.0 35.0 40.0 45.0 50.0 55.0 60.0 65.0 70.0 75.0 80.0]
const float ambientOcclusionLevel = 1.0; // [0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0]





// style overrides

#if STYLE == 0
#if DARKEN_SKY_UNDERGROUND == -1
#undef DARKEN_SKY_UNDERGROUND
										#define DARKEN_SKY_UNDERGROUND 1
#endif
#if STARS_BRIGHTNESS == -1
#undef STARS_BRIGHTNESS
										#define STARS_BRIGHTNESS 1.3
#endif
#if DARKEN_STARS_NEAR_BLOCKLIGHT == -1
#undef DARKEN_STARS_NEAR_BLOCKLIGHT
										#define DARKEN_STARS_NEAR_BLOCKLIGHT 1
#endif
#if DARKENED_STARS_BRIGHTNESS == -1
#undef DARKENED_STARS_BRIGHTNESS
										#define DARKENED_STARS_BRIGHTNESS 0.2
#endif
#if WEATHER_TRANSPARENCY == -1
#undef WEATHER_TRANSPARENCY
										#define WEATHER_TRANSPARENCY 0.3
#endif
#if CLOUD_TRANSPARENCY == -1
#undef CLOUD_TRANSPARENCY
										#define CLOUD_TRANSPARENCY 0.5
#endif
#if HIDE_NEARBY_CLOUDS == -1
#undef HIDE_NEARBY_CLOUDS
										#define HIDE_NEARBY_CLOUDS 0
#endif






#if FOG_ENABLED == -1
#undef FOG_ENABLED
										#define FOG_ENABLED 1
#endif
#if FOG_HEIGHT_SCALE == -1
#undef FOG_HEIGHT_SCALE
										#define FOG_HEIGHT_SCALE 3.0
#endif
#if FOG_EXTRA_CLOUDS_DISTANCE == -1
#undef FOG_EXTRA_CLOUDS_DISTANCE
										#define FOG_EXTRA_CLOUDS_DISTANCE 10.0
#endif
#if FOG_CURVE == -1
#undef FOG_CURVE
										#define FOG_CURVE 3
#endif



#if FOG_AIR_START == -1
#undef FOG_AIR_START
										#define FOG_AIR_START 0.8
#endif
#if FOG_AIR_END == -1
#undef FOG_AIR_END
										#define FOG_AIR_END 1.0
#endif
#if FOG_AIR_MIN == -1
#undef FOG_AIR_MIN
										#define FOG_AIR_MIN 0.0
#endif
#if FOG_AIR_RAIN_START == -1
#undef FOG_AIR_RAIN_START
										#define FOG_AIR_RAIN_START 0.5
#endif
#if FOG_AIR_RAIN_END == -1
#undef FOG_AIR_RAIN_END
										#define FOG_AIR_RAIN_END 1.0
#endif
#if FOG_AIR_RAIN_MIN == -1
#undef FOG_AIR_RAIN_MIN
										#define FOG_AIR_RAIN_MIN 0.3
#endif
#if FOG_WATER_START == -1
#undef FOG_WATER_START
										#define FOG_WATER_START 0.0
#endif
#if FOG_WATER_END == -1
#undef FOG_WATER_END
										#define FOG_WATER_END 60
#endif
#if FOG_WATER_MIN == -1
#undef FOG_WATER_MIN
										#define FOG_WATER_MIN 0.2
#endif
#if FOG_LAVA_START == -1
#undef FOG_LAVA_START
										#define FOG_LAVA_START 0.0
#endif
#if FOG_LAVA_END == -1
#undef FOG_LAVA_END
										#define FOG_LAVA_END 3
#endif
#if FOG_LAVA_MIN == -1
#undef FOG_LAVA_MIN
										#define FOG_LAVA_MIN 0.9
#endif
#if FOG_POWDERED_SNOW_START == -1
#undef FOG_POWDERED_SNOW_START
										#define FOG_POWDERED_SNOW_START 0.0
#endif
#if FOG_POWDERED_SNOW_END == -1
#undef FOG_POWDERED_SNOW_END
										#define FOG_POWDERED_SNOW_END 10
#endif
#if FOG_POWDERED_SNOW_MIN == -1
#undef FOG_POWDERED_SNOW_MIN
										#define FOG_POWDERED_SNOW_MIN 0.8
#endif






#if BLOCK_RED == -1
#undef BLOCK_RED
										#define BLOCK_RED 1.0
#endif
#if BLOCK_GREEN == -1
#undef BLOCK_GREEN
										#define BLOCK_GREEN 0.93
#endif
#if BLOCK_BLUE == -1
#undef BLOCK_BLUE
										#define BLOCK_BLUE 0.85
#endif
#if BLOCK_BRIGHTNESS == -1
#undef BLOCK_BRIGHTNESS
										#define BLOCK_BRIGHTNESS 1.0
#endif
#if BLOCK_BRIGHTNESS_CURVE == -1
#undef BLOCK_BRIGHTNESS_CURVE
										#define BLOCK_BRIGHTNESS_CURVE 1
#endif






#if CAVE_AMBIENT_RED == -1
#undef CAVE_AMBIENT_RED
										#define CAVE_AMBIENT_RED 1.0
#endif
#if CAVE_AMBIENT_GREEN == -1
#undef CAVE_AMBIENT_GREEN
										#define CAVE_AMBIENT_GREEN 0.9
#endif
#if CAVE_AMBIENT_BLUE == -1
#undef CAVE_AMBIENT_BLUE
										#define CAVE_AMBIENT_BLUE 0.8
#endif
#if CAVE_AMBIENT_BRIGHTNESS == -1
#undef CAVE_AMBIENT_BRIGHTNESS
										#define CAVE_AMBIENT_BRIGHTNESS 0.17
#endif






#if SKYLIGHT_DAY_RED == -1
#undef SKYLIGHT_DAY_RED
										#define SKYLIGHT_DAY_RED 0.8
#endif
#if SKYLIGHT_DAY_GREEN == -1
#undef SKYLIGHT_DAY_GREEN
										#define SKYLIGHT_DAY_GREEN 0.9
#endif
#if SKYLIGHT_DAY_BLUE == -1
#undef SKYLIGHT_DAY_BLUE
										#define SKYLIGHT_DAY_BLUE 1.0
#endif
#if SKYLIGHT_DAY_BRIGHTNESS == -1
#undef SKYLIGHT_DAY_BRIGHTNESS
										#define SKYLIGHT_DAY_BRIGHTNESS 0.9
#endif



#if AMBIENT_DAY_RED == -1
#undef AMBIENT_DAY_RED
										#define AMBIENT_DAY_RED 0.98
#endif
#if AMBIENT_DAY_GREEN == -1
#undef AMBIENT_DAY_GREEN
										#define AMBIENT_DAY_GREEN 1.0
#endif
#if AMBIENT_DAY_BLUE == -1
#undef AMBIENT_DAY_BLUE
										#define AMBIENT_DAY_BLUE 1.05
#endif
#if AMBIENT_DAY_BRIGHTNESS == -1
#undef AMBIENT_DAY_BRIGHTNESS
										#define AMBIENT_DAY_BRIGHTNESS 0.85
#endif






#if SKYLIGHT_NIGHT_RED == -1
#undef SKYLIGHT_NIGHT_RED
										#define SKYLIGHT_NIGHT_RED 0.4
#endif
#if SKYLIGHT_NIGHT_GREEN == -1
#undef SKYLIGHT_NIGHT_GREEN
										#define SKYLIGHT_NIGHT_GREEN 0.5
#endif
#if SKYLIGHT_NIGHT_BLUE == -1
#undef SKYLIGHT_NIGHT_BLUE
										#define SKYLIGHT_NIGHT_BLUE 1.0
#endif
#if SKYLIGHT_NIGHT_BRIGHTNESS == -1
#undef SKYLIGHT_NIGHT_BRIGHTNESS
										#define SKYLIGHT_NIGHT_BRIGHTNESS 0.3
#endif



#if AMBIENT_NIGHT_RED == -1
#undef AMBIENT_NIGHT_RED
										#define AMBIENT_NIGHT_RED 0.6
#endif
#if AMBIENT_NIGHT_GREEN == -1
#undef AMBIENT_NIGHT_GREEN
										#define AMBIENT_NIGHT_GREEN 0.7
#endif
#if AMBIENT_NIGHT_BLUE == -1
#undef AMBIENT_NIGHT_BLUE
										#define AMBIENT_NIGHT_BLUE 1.0
#endif
#if AMBIENT_NIGHT_BRIGHTNESS == -1
#undef AMBIENT_NIGHT_BRIGHTNESS
										#define AMBIENT_NIGHT_BRIGHTNESS 0.35
#endif






#if SKYLIGHT_SUNRISE_RED == -1
#undef SKYLIGHT_SUNRISE_RED
										#define SKYLIGHT_SUNRISE_RED 1.1
#endif
#if SKYLIGHT_SUNRISE_GREEN == -1
#undef SKYLIGHT_SUNRISE_GREEN
										#define SKYLIGHT_SUNRISE_GREEN 0.6
#endif
#if SKYLIGHT_SUNRISE_BLUE == -1
#undef SKYLIGHT_SUNRISE_BLUE
										#define SKYLIGHT_SUNRISE_BLUE 0.1
#endif
#if SKYLIGHT_SUNRISE_BRIGHTNESS == -1
#undef SKYLIGHT_SUNRISE_BRIGHTNESS
										#define SKYLIGHT_SUNRISE_BRIGHTNESS 1.3
#endif



#if AMBIENT_SUNRISE_RED == -1
#undef AMBIENT_SUNRISE_RED
										#define AMBIENT_SUNRISE_RED 1.03
#endif
#if AMBIENT_SUNRISE_GREEN == -1
#undef AMBIENT_SUNRISE_GREEN
										#define AMBIENT_SUNRISE_GREEN 0.96
#endif
#if AMBIENT_SUNRISE_BLUE == -1
#undef AMBIENT_SUNRISE_BLUE
										#define AMBIENT_SUNRISE_BLUE 0.9
#endif
#if AMBIENT_SUNRISE_BRIGHTNESS == -1
#undef AMBIENT_SUNRISE_BRIGHTNESS
										#define AMBIENT_SUNRISE_BRIGHTNESS 0.7
#endif






#if SKYLIGHT_SUNSET_RED == -1
#undef SKYLIGHT_SUNSET_RED
										#define SKYLIGHT_SUNSET_RED 1.3
#endif
#if SKYLIGHT_SUNSET_GREEN == -1
#undef SKYLIGHT_SUNSET_GREEN
										#define SKYLIGHT_SUNSET_GREEN 0.5
#endif
#if SKYLIGHT_SUNSET_BLUE == -1
#undef SKYLIGHT_SUNSET_BLUE
										#define SKYLIGHT_SUNSET_BLUE 0.0
#endif
#if SKYLIGHT_SUNSET_BRIGHTNESS == -1
#undef SKYLIGHT_SUNSET_BRIGHTNESS
										#define SKYLIGHT_SUNSET_BRIGHTNESS 1.3
#endif



#if AMBIENT_SUNSET_RED == -1
#undef AMBIENT_SUNSET_RED
										#define AMBIENT_SUNSET_RED 1.05
#endif
#if AMBIENT_SUNSET_GREEN == -1
#undef AMBIENT_SUNSET_GREEN
										#define AMBIENT_SUNSET_GREEN 0.9
#endif
#if AMBIENT_SUNSET_BLUE == -1
#undef AMBIENT_SUNSET_BLUE
										#define AMBIENT_SUNSET_BLUE 0.9
#endif
#if AMBIENT_SUNSET_BRIGHTNESS == -1
#undef AMBIENT_SUNSET_BRIGHTNESS
										#define AMBIENT_SUNSET_BRIGHTNESS 0.8
#endif












#if SHADOWS_ENABLED == -1
#undef SHADOWS_ENABLED
										#define SHADOWS_ENABLED 1
#endif
#if EXCLUDE_FOLIAGE == -1
#undef EXCLUDE_FOLIAGE
										#define EXCLUDE_FOLIAGE 1
#endif
#if SHADOW_FILTERING == -1
#undef SHADOW_FILTERING
										#define SHADOW_FILTERING 2
#endif
#if SHADOWS_NOISE == -1
#undef SHADOWS_NOISE
										#define SHADOWS_NOISE 0.4
#endif
#if SHADOW_DISTORT_ADDITION == -1
#undef SHADOW_DISTORT_ADDITION
										#define SHADOW_DISTORT_ADDITION 0.09
#endif
#if SIDE_SHADING == -1
#undef SIDE_SHADING
										#define SIDE_SHADING 0.25
#endif
#if RAIN_LIGHT_MULT == -1
#undef RAIN_LIGHT_MULT
										#define RAIN_LIGHT_MULT 0.7
#endif
#if USE_VANILLA_BRIGHTNESS == -1
#undef USE_VANILLA_BRIGHTNESS
										#define USE_VANILLA_BRIGHTNESS 1
#endif
#if BLOCKLIGHT_FLICKERING_ENABLED == -1
#undef BLOCKLIGHT_FLICKERING_ENABLED
										#define BLOCKLIGHT_FLICKERING_ENABLED 1
#endif






#if HANDHELD_LIGHT_ENABLED == -1
#undef HANDHELD_LIGHT_ENABLED
										#define HANDHELD_LIGHT_ENABLED 1
#endif
#if HANDHELD_LIGHT_DISTANCE == -1
#undef HANDHELD_LIGHT_DISTANCE
										#define HANDHELD_LIGHT_DISTANCE 13
#endif
#if HANDHELD_LIGHT_BRIGHTNESS == -1
#undef HANDHELD_LIGHT_BRIGHTNESS
										#define HANDHELD_LIGHT_BRIGHTNESS 0.85
#endif












#if WATER_REFLECTIONS_ENABLED == -1
#undef WATER_REFLECTIONS_ENABLED
										#define WATER_REFLECTIONS_ENABLED 1
#endif
#if WATER_REFLECTION_AMOUNT == -1
#undef WATER_REFLECTION_AMOUNT
										#define WATER_REFLECTION_AMOUNT 0.7
#endif
#if WATER_REFLECTION_FRESNEL == -1
#undef WATER_REFLECTION_FRESNEL
										#define WATER_REFLECTION_FRESNEL 0.7
#endif



#if RAIN_REFLECTIONS_ENABLED == -1
#undef RAIN_REFLECTIONS_ENABLED
										#define RAIN_REFLECTIONS_ENABLED 1
#endif
#if RAIN_REFLECTION_COVERAGE == -1
#undef RAIN_REFLECTION_COVERAGE
										#define RAIN_REFLECTION_COVERAGE 0.6
#endif
#if RAIN_REFLECTION_MIN == -1
#undef RAIN_REFLECTION_MIN
										#define RAIN_REFLECTION_MIN 0.4
#endif
#if RAIN_REFLECTION_SLOPE == -1
#undef RAIN_REFLECTION_SLOPE
										#define RAIN_REFLECTION_SLOPE 1.0
#endif
#if RAIN_REFLECTION_AMOUNT == -1
#undef RAIN_REFLECTION_AMOUNT
										#define RAIN_REFLECTION_AMOUNT 0.5
#endif
#if RAIN_REFLECTION_FRESNEL == -1
#undef RAIN_REFLECTION_FRESNEL
										#define RAIN_REFLECTION_FRESNEL 0.7
#endif



#if REFLECTION_ITERATIONS == -1
#undef REFLECTION_ITERATIONS
										#define REFLECTION_ITERATIONS 40
#endif
#if REFLECTION_STEP_INCREASE == -1
#undef REFLECTION_STEP_INCREASE
										#define REFLECTION_STEP_INCREASE 1.1
#endif






#if SSAO_ENABLED == -1
#undef SSAO_ENABLED
										#define SSAO_ENABLED 1
#endif
#if AO_AMOUNT == -1
#undef AO_AMOUNT
										#define AO_AMOUNT 1.0
#endif
#if AO_SIZE == -1
#undef AO_SIZE
										#define AO_SIZE 1.0
#endif
#if AO_QUALITY == -1
#undef AO_QUALITY
										#define AO_QUALITY 3
#endif
#if SSAO_APPLICATION_TYPE == -1
#undef SSAO_APPLICATION_TYPE
										#define SSAO_APPLICATION_TYPE 1
#endif






#if BLOOM_ENABLED == -1
#undef BLOOM_ENABLED
										#define BLOOM_ENABLED 1
#endif
#if BLOOM_AMOUNT == -1
#undef BLOOM_AMOUNT
										#define BLOOM_AMOUNT 1.0
#endif
#if BLOOM_QUALITY == -1
#undef BLOOM_QUALITY
										#define BLOOM_QUALITY 3
#endif
#if BLOOM_COMPUTE_COUNT == -1
#undef BLOOM_COMPUTE_COUNT
										#define BLOOM_COMPUTE_COUNT 1
#endif
#if BLOOM_LOW_CUTOFF == -1
#undef BLOOM_LOW_CUTOFF
										#define BLOOM_LOW_CUTOFF 0.4
#endif
#if BLOOM_HIGH_CUTOFF == -1
#undef BLOOM_HIGH_CUTOFF
										#define BLOOM_HIGH_CUTOFF 0.7
#endif
#if BLOOM_SIZE == -1
#undef BLOOM_SIZE
										#define BLOOM_SIZE 1.0
#endif
#if BLOOM_NETHER_MULT == -1
#undef BLOOM_NETHER_MULT
										#define BLOOM_NETHER_MULT 2.0
#endif
#if BLOOM_SKY_BRIGHTNESS == -1
#undef BLOOM_SKY_BRIGHTNESS
										#define BLOOM_SKY_BRIGHTNESS 0.6
#endif
#if BLOOM_ENTITY_BRIGHTNESS == -1
#undef BLOOM_ENTITY_BRIGHTNESS
										#define BLOOM_ENTITY_BRIGHTNESS 0.5
#endif
#if BLOOM_CLOUD_BRIGHTNESS == -1
#undef BLOOM_CLOUD_BRIGHTNESS
										#define BLOOM_CLOUD_BRIGHTNESS 0.3
#endif
#if BLOOM_HAND_BRIGHTNESS == -1
#undef BLOOM_HAND_BRIGHTNESS
										#define BLOOM_HAND_BRIGHTNESS 0.3
#endif






#if DEPTH_SUNRAYS_ENABLED == -1
#undef DEPTH_SUNRAYS_ENABLED
										#define DEPTH_SUNRAYS_ENABLED 1
#endif
#if VOL_SUNRAYS_ENABLED == -1
#undef VOL_SUNRAYS_ENABLED
										#define VOL_SUNRAYS_ENABLED 0
#endif
#if SUNRAYS_STYLE == -1
#undef SUNRAYS_STYLE
										#define SUNRAYS_STYLE 1
#endif
#if SUNRAYS_QUALITY == -1
#undef SUNRAYS_QUALITY
										#define SUNRAYS_QUALITY 4
#endif
#if SUNRAYS_COMPUTE_COUNT == -1
#undef SUNRAYS_COMPUTE_COUNT
										#define SUNRAYS_COMPUTE_COUNT 1
#endif
#if SUNRAYS_FLICKERING_FIX == -1
#undef SUNRAYS_FLICKERING_FIX
										#define SUNRAYS_FLICKERING_FIX 0
#endif
#if SUNRAYS_AMOUNT_DAY == -1
#undef SUNRAYS_AMOUNT_DAY
										#define SUNRAYS_AMOUNT_DAY 0.4
#endif
#if SUNRAYS_AMOUNT_NIGHT == -1
#undef SUNRAYS_AMOUNT_NIGHT
										#define SUNRAYS_AMOUNT_NIGHT 0.15
#endif
#if SUNRAYS_AMOUNT_SUNRISE == -1
#undef SUNRAYS_AMOUNT_SUNRISE
										#define SUNRAYS_AMOUNT_SUNRISE 0.7
#endif
#if SUNRAYS_AMOUNT_SUNSET == -1
#undef SUNRAYS_AMOUNT_SUNSET
										#define SUNRAYS_AMOUNT_SUNSET 0.7
#endif
#if SUNRAYS_SUN_RED == -1
#undef SUNRAYS_SUN_RED
										#define SUNRAYS_SUN_RED 1.0
#endif
#if SUNRAYS_SUN_GREEN == -1
#undef SUNRAYS_SUN_GREEN
										#define SUNRAYS_SUN_GREEN 0.65
#endif
#if SUNRAYS_SUN_BLUE == -1
#undef SUNRAYS_SUN_BLUE
										#define SUNRAYS_SUN_BLUE 0.4
#endif
#if SUNRAYS_MOON_RED == -1
#undef SUNRAYS_MOON_RED
										#define SUNRAYS_MOON_RED 0.6
#endif
#if SUNRAYS_MOON_GREEN == -1
#undef SUNRAYS_MOON_GREEN
										#define SUNRAYS_MOON_GREEN 0.7
#endif
#if SUNRAYS_MOON_BLUE == -1
#undef SUNRAYS_MOON_BLUE
										#define SUNRAYS_MOON_BLUE 1.0
#endif






#if DOF_ENABLED == -1
#undef DOF_ENABLED
										#define DOF_ENABLED 0
#endif
#if DOF_NEAR_BLUR_START == -1
#undef DOF_NEAR_BLUR_START
										#define DOF_NEAR_BLUR_START 0.03
#endif
#if DOF_NEAR_BLUR_SLOPE == -1
#undef DOF_NEAR_BLUR_SLOPE
										#define DOF_NEAR_BLUR_SLOPE 0.05
#endif
#if DOF_NEAR_BLUR_STRENGTH == -1
#undef DOF_NEAR_BLUR_STRENGTH
										#define DOF_NEAR_BLUR_STRENGTH 0.8
#endif
#if DOF_NEAR_BLUR_SIZE == -1
#undef DOF_NEAR_BLUR_SIZE
										#define DOF_NEAR_BLUR_SIZE 2.0
#endif
#if DOF_FAR_BLUR_START == -1
#undef DOF_FAR_BLUR_START
										#define DOF_FAR_BLUR_START 0.1
#endif
#if DOF_FAR_BLUR_SLOPE == -1
#undef DOF_FAR_BLUR_SLOPE
										#define DOF_FAR_BLUR_SLOPE 0.3
#endif
#if DOF_FAR_BLUR_STRENGTH == -1
#undef DOF_FAR_BLUR_STRENGTH
										#define DOF_FAR_BLUR_STRENGTH 0.9
#endif
#if DOF_FAR_BLUR_SIZE == -1
#undef DOF_FAR_BLUR_SIZE
										#define DOF_FAR_BLUR_SIZE 2.0
#endif
#if DOF_SLOPE_TYPE == -1
#undef DOF_SLOPE_TYPE
										#define DOF_SLOPE_TYPE 1
#endif
#if DOF_LOCKED_FOCAL_PLANE == -1
#undef DOF_LOCKED_FOCAL_PLANE
										#define DOF_LOCKED_FOCAL_PLANE 0
#endif
#if DOF_FOCAL_PLANE_DISTANCE == -1
#undef DOF_FOCAL_PLANE_DISTANCE
										#define DOF_FOCAL_PLANE_DISTANCE 10
#endif






#if TAA_ENABLED == -1
#undef TAA_ENABLED
										#define TAA_ENABLED 1
#endif






#if MOTION_BLUR_ENABLED == -1
#undef MOTION_BLUR_ENABLED
										#define MOTION_BLUR_ENABLED 0
#endif
#if MOTION_BLUR_AMOUNT == -1
#undef MOTION_BLUR_AMOUNT
										#define MOTION_BLUR_AMOUNT 0.5
#endif
#if MOTION_BLUR_QUALITY == -1
#undef MOTION_BLUR_QUALITY
										#define MOTION_BLUR_QUALITY 3
#endif






#if SHARPENING_ENABLED == -1
#undef SHARPENING_ENABLED
										#define SHARPENING_ENABLED 1
#endif
#if SHARPEN_AMOUNT == -1
#undef SHARPEN_AMOUNT
										#define SHARPEN_AMOUNT 1.0
#endif
#if SHARPEN_VEL_ADDITION == -1
#undef SHARPEN_VEL_ADDITION
										#define SHARPEN_VEL_ADDITION 1.0
#endif
#if SHARPENING_DETECT_SIZE == -1
#undef SHARPENING_DETECT_SIZE
										#define SHARPENING_DETECT_SIZE 5
#endif






#if GAMMA == -1
#undef GAMMA
										#define GAMMA 0
#endif
#if BRIGHTNESS == -1
#undef BRIGHTNESS
										#define BRIGHTNESS 1.05
#endif



#if SATURATION == -1
#undef SATURATION
										#define SATURATION -0.15
#endif
#if SATURATION_DARK == -1
#undef SATURATION_DARK
										#define SATURATION_DARK -0.1
#endif
#if SATURATION_LIGHT == -1
#undef SATURATION_LIGHT
										#define SATURATION_LIGHT 0.3
#endif



#if VIBRANCE == -1
#undef VIBRANCE
										#define VIBRANCE 0.25
#endif



#if CONTRAST == -1
#undef CONTRAST
										#define CONTRAST 0.15
#endif
#if CONTRAST_DETECT_RED == -1
#undef CONTRAST_DETECT_RED
										#define CONTRAST_DETECT_RED 0.5
#endif
#if CONTRAST_DETECT_GREEN == -1
#undef CONTRAST_DETECT_GREEN
										#define CONTRAST_DETECT_GREEN 0.5
#endif
#if CONTRAST_DETECT_BLUE == -1
#undef CONTRAST_DETECT_BLUE
										#define CONTRAST_DETECT_BLUE 0.5
#endif



#if TONEMAPPER == -1
#undef TONEMAPPER
										#define TONEMAPPER 0
#endif
#if USE_GAMMA_CORRECTION == -1
#undef USE_GAMMA_CORRECTION
										#define USE_GAMMA_CORRECTION 0
#endif






#if COLORBLIND_MODE == -1
#undef COLORBLIND_MODE
										#define COLORBLIND_MODE 0
#endif
#if COLORBLIND_INTENSITY == -1
#undef COLORBLIND_INTENSITY
										#define COLORBLIND_INTENSITY 1.0
#endif






#if VIGNETTE_ENABLED == -1
#undef VIGNETTE_ENABLED
										#define VIGNETTE_ENABLED 1
#endif
#if VIGNETTE_AMOUNT_SURFACE == -1
#undef VIGNETTE_AMOUNT_SURFACE
										#define VIGNETTE_AMOUNT_SURFACE 0.0
#endif
#if VIGNETTE_AMOUNT_UNDERGROUND == -1
#undef VIGNETTE_AMOUNT_UNDERGROUND
										#define VIGNETTE_AMOUNT_UNDERGROUND 0.8
#endif
#if VIGNETTE_SCALE == -1
#undef VIGNETTE_SCALE
										#define VIGNETTE_SCALE 1.0
#endif
#if VIGNETTE_NOISE_ENABLED == -1
#undef VIGNETTE_NOISE_ENABLED
										#define VIGNETTE_NOISE_ENABLED 1
#endif






#if WAVING_ENABLED == -1
#undef WAVING_ENABLED
										#define WAVING_ENABLED 1
#endif
#if WAVING_SPEED == -1
#undef WAVING_SPEED
										#define WAVING_SPEED 1.0
#endif
#if WAVING_WORLD_SCALE == -1
#undef WAVING_WORLD_SCALE
										#define WAVING_WORLD_SCALE 0.15
#endif
#if WAVING_AMOUNT_1 == -1
#undef WAVING_AMOUNT_1
										#define WAVING_AMOUNT_1 0.15
#endif
#if WAVING_AMOUNT_2 == -1
#undef WAVING_AMOUNT_2
										#define WAVING_AMOUNT_2 0.5
#endif
#if WAVING_AMOUNT_3 == -1
#undef WAVING_AMOUNT_3
										#define WAVING_AMOUNT_3 1.0
#endif
#if WAVING_RAIN_MULT == -1
#undef WAVING_RAIN_MULT
										#define WAVING_RAIN_MULT 2.5
#endif
#if WAVING_NIGHT_MULT == -1
#undef WAVING_NIGHT_MULT
										#define WAVING_NIGHT_MULT 0.3
#endif
#if HEIGHT_BASED_WAVING_ENABLED == -1
#undef HEIGHT_BASED_WAVING_ENABLED
										#define HEIGHT_BASED_WAVING_ENABLED 1
#endif



#if PHYSICALLY_WAVING_WATER_ENABLED == -1
#undef PHYSICALLY_WAVING_WATER_ENABLED
										#define PHYSICALLY_WAVING_WATER_ENABLED 1
#endif
#if WAVING_WATER_NORMALS_ENABLED == -1
#undef WAVING_WATER_NORMALS_ENABLED
										#define WAVING_WATER_NORMALS_ENABLED 1
#endif



#if UNDERWATER_WAVINESS_ENABLED == -1
#undef UNDERWATER_WAVINESS_ENABLED
										#define UNDERWATER_WAVINESS_ENABLED 1
#endif
#if UNDERWATER_WAVINESS_AMOUNT == -1
#undef UNDERWATER_WAVINESS_AMOUNT
										#define UNDERWATER_WAVINESS_AMOUNT 1.0
#endif
#if UNDERWATER_WAVINESS_SCALE == -1
#undef UNDERWATER_WAVINESS_SCALE
										#define UNDERWATER_WAVINESS_SCALE 1.0
#endif
#if UNDERWATER_WAVINESS_SPEED == -1
#undef UNDERWATER_WAVINESS_SPEED
										#define UNDERWATER_WAVINESS_SPEED 1.0
#endif






#if WATER_FRESNEL_ADDITION == -1
#undef WATER_FRESNEL_ADDITION
										#define WATER_FRESNEL_ADDITION 1
#endif
#if WATER_TRANSPARENCY == -1
#undef WATER_TRANSPARENCY
										#define WATER_TRANSPARENCY 0.35
#endif






#if ISOMETRIC_RENDERING_ENABLED == -1
#undef ISOMETRIC_RENDERING_ENABLED
										#define ISOMETRIC_RENDERING_ENABLED 0
#endif
#if ISOMETRIC_WORLD_SCALE == -1
#undef ISOMETRIC_WORLD_SCALE
										#define ISOMETRIC_WORLD_SCALE 32
#endif
#if ISOMETRIC_BACKWARD_VISIBILITY == -1
#undef ISOMETRIC_BACKWARD_VISIBILITY
										#define ISOMETRIC_BACKWARD_VISIBILITY 1
#endif
#if ISOMETRIC_FORWARD_VISIBILITY == -1
#undef ISOMETRIC_FORWARD_VISIBILITY
										#define ISOMETRIC_FORWARD_VISIBILITY 128
#endif












#if USE_BETTER_RAND == -1
#undef USE_BETTER_RAND
										#define USE_BETTER_RAND 0
#endif
#if SHOW_DANGEROUS_LIGHT == -1
#undef SHOW_DANGEROUS_LIGHT
										#define SHOW_DANGEROUS_LIGHT 0
#endif
#if USE_SIMPLE_LIGHT == -1
#undef USE_SIMPLE_LIGHT
										#define USE_SIMPLE_LIGHT 0
#endif
#if SSAO_SHOW_AMOUNT == -1
#undef SSAO_SHOW_AMOUNT
										#define SSAO_SHOW_AMOUNT 0
#endif
#if BLOOM_SHOW_ADDITION == -1
#undef BLOOM_SHOW_ADDITION
										#define BLOOM_SHOW_ADDITION 0
#endif
#if BLOOM_SHOW_FILTERED_TEXTURE == -1
#undef BLOOM_SHOW_FILTERED_TEXTURE
										#define BLOOM_SHOW_FILTERED_TEXTURE 0
#endif
#if SUNRAYS_SHOW_ADDITION == -1
#undef SUNRAYS_SHOW_ADDITION
										#define SUNRAYS_SHOW_ADDITION 0
#endif
#if DOF_SHOW_AMOUNTS == -1
#undef DOF_SHOW_AMOUNTS
										#define DOF_SHOW_AMOUNTS 0
#endif
#if REFLECTIVE_EVERYTHING == -1
#undef REFLECTIVE_EVERYTHING
										#define REFLECTIVE_EVERYTHING 0
#endif
#endif
#if STYLE == 1
#if DARKEN_SKY_UNDERGROUND == -1
#undef DARKEN_SKY_UNDERGROUND
										#define DARKEN_SKY_UNDERGROUND 1
#endif
#if STARS_BRIGHTNESS == -1
#undef STARS_BRIGHTNESS
										#define STARS_BRIGHTNESS 0.9
#endif
#if DARKEN_STARS_NEAR_BLOCKLIGHT == -1
#undef DARKEN_STARS_NEAR_BLOCKLIGHT
										#define DARKEN_STARS_NEAR_BLOCKLIGHT 1
#endif
#if DARKENED_STARS_BRIGHTNESS == -1
#undef DARKENED_STARS_BRIGHTNESS
										#define DARKENED_STARS_BRIGHTNESS 0.2
#endif
#if WEATHER_TRANSPARENCY == -1
#undef WEATHER_TRANSPARENCY
										#define WEATHER_TRANSPARENCY 0.0
#endif
#if CLOUD_TRANSPARENCY == -1
#undef CLOUD_TRANSPARENCY
										#define CLOUD_TRANSPARENCY 0.5
#endif
#if HIDE_NEARBY_CLOUDS == -1
#undef HIDE_NEARBY_CLOUDS
										#define HIDE_NEARBY_CLOUDS 0
#endif






#if FOG_ENABLED == -1
#undef FOG_ENABLED
										#define FOG_ENABLED 1
#endif
#if FOG_HEIGHT_SCALE == -1
#undef FOG_HEIGHT_SCALE
										#define FOG_HEIGHT_SCALE 3.0
#endif
#if FOG_EXTRA_CLOUDS_DISTANCE == -1
#undef FOG_EXTRA_CLOUDS_DISTANCE
										#define FOG_EXTRA_CLOUDS_DISTANCE 10.0
#endif
#if FOG_CURVE == -1
#undef FOG_CURVE
										#define FOG_CURVE 1
#endif



#if FOG_AIR_START == -1
#undef FOG_AIR_START
										#define FOG_AIR_START 0.5
#endif
#if FOG_AIR_END == -1
#undef FOG_AIR_END
										#define FOG_AIR_END 1.0
#endif
#if FOG_AIR_MIN == -1
#undef FOG_AIR_MIN
										#define FOG_AIR_MIN 0.02
#endif
#if FOG_AIR_RAIN_START == -1
#undef FOG_AIR_RAIN_START
										#define FOG_AIR_RAIN_START 0.0
#endif
#if FOG_AIR_RAIN_END == -1
#undef FOG_AIR_RAIN_END
										#define FOG_AIR_RAIN_END 1.0
#endif
#if FOG_AIR_RAIN_MIN == -1
#undef FOG_AIR_RAIN_MIN
										#define FOG_AIR_RAIN_MIN 0.2
#endif
#if FOG_WATER_START == -1
#undef FOG_WATER_START
										#define FOG_WATER_START 0.0
#endif
#if FOG_WATER_END == -1
#undef FOG_WATER_END
										#define FOG_WATER_END 150
#endif
#if FOG_WATER_MIN == -1
#undef FOG_WATER_MIN
										#define FOG_WATER_MIN 0.4
#endif
#if FOG_LAVA_START == -1
#undef FOG_LAVA_START
										#define FOG_LAVA_START 0.0
#endif
#if FOG_LAVA_END == -1
#undef FOG_LAVA_END
										#define FOG_LAVA_END 3
#endif
#if FOG_LAVA_MIN == -1
#undef FOG_LAVA_MIN
										#define FOG_LAVA_MIN 0.9
#endif
#if FOG_POWDERED_SNOW_START == -1
#undef FOG_POWDERED_SNOW_START
										#define FOG_POWDERED_SNOW_START 0.0
#endif
#if FOG_POWDERED_SNOW_END == -1
#undef FOG_POWDERED_SNOW_END
										#define FOG_POWDERED_SNOW_END 10
#endif
#if FOG_POWDERED_SNOW_MIN == -1
#undef FOG_POWDERED_SNOW_MIN
										#define FOG_POWDERED_SNOW_MIN 0.8
#endif






#if BLOCK_RED == -1
#undef BLOCK_RED
										#define BLOCK_RED 1.0
#endif
#if BLOCK_GREEN == -1
#undef BLOCK_GREEN
										#define BLOCK_GREEN 0.725
#endif
#if BLOCK_BLUE == -1
#undef BLOCK_BLUE
										#define BLOCK_BLUE 0.4
#endif
#if BLOCK_BRIGHTNESS == -1
#undef BLOCK_BRIGHTNESS
										#define BLOCK_BRIGHTNESS 0.9
#endif
#if BLOCK_BRIGHTNESS_CURVE == -1
#undef BLOCK_BRIGHTNESS_CURVE
										#define BLOCK_BRIGHTNESS_CURVE 3
#endif






#if CAVE_AMBIENT_RED == -1
#undef CAVE_AMBIENT_RED
										#define CAVE_AMBIENT_RED 1.0
#endif
#if CAVE_AMBIENT_GREEN == -1
#undef CAVE_AMBIENT_GREEN
										#define CAVE_AMBIENT_GREEN 0.8
#endif
#if CAVE_AMBIENT_BLUE == -1
#undef CAVE_AMBIENT_BLUE
										#define CAVE_AMBIENT_BLUE 0.75
#endif
#if CAVE_AMBIENT_BRIGHTNESS == -1
#undef CAVE_AMBIENT_BRIGHTNESS
										#define CAVE_AMBIENT_BRIGHTNESS 0.1
#endif






#if SKYLIGHT_DAY_RED == -1
#undef SKYLIGHT_DAY_RED
										#define SKYLIGHT_DAY_RED 1.05
#endif
#if SKYLIGHT_DAY_GREEN == -1
#undef SKYLIGHT_DAY_GREEN
										#define SKYLIGHT_DAY_GREEN 1.05
#endif
#if SKYLIGHT_DAY_BLUE == -1
#undef SKYLIGHT_DAY_BLUE
										#define SKYLIGHT_DAY_BLUE 1.0
#endif
#if SKYLIGHT_DAY_BRIGHTNESS == -1
#undef SKYLIGHT_DAY_BRIGHTNESS
										#define SKYLIGHT_DAY_BRIGHTNESS 4.0
#endif



#if AMBIENT_DAY_RED == -1
#undef AMBIENT_DAY_RED
										#define AMBIENT_DAY_RED 1.0
#endif
#if AMBIENT_DAY_GREEN == -1
#undef AMBIENT_DAY_GREEN
										#define AMBIENT_DAY_GREEN 1.0
#endif
#if AMBIENT_DAY_BLUE == -1
#undef AMBIENT_DAY_BLUE
										#define AMBIENT_DAY_BLUE 1.0
#endif
#if AMBIENT_DAY_BRIGHTNESS == -1
#undef AMBIENT_DAY_BRIGHTNESS
										#define AMBIENT_DAY_BRIGHTNESS 0.5
#endif






#if SKYLIGHT_NIGHT_RED == -1
#undef SKYLIGHT_NIGHT_RED
										#define SKYLIGHT_NIGHT_RED 1.0
#endif
#if SKYLIGHT_NIGHT_GREEN == -1
#undef SKYLIGHT_NIGHT_GREEN
										#define SKYLIGHT_NIGHT_GREEN 1.0
#endif
#if SKYLIGHT_NIGHT_BLUE == -1
#undef SKYLIGHT_NIGHT_BLUE
										#define SKYLIGHT_NIGHT_BLUE 1.0
#endif
#if SKYLIGHT_NIGHT_BRIGHTNESS == -1
#undef SKYLIGHT_NIGHT_BRIGHTNESS
										#define SKYLIGHT_NIGHT_BRIGHTNESS 0.3
#endif



#if AMBIENT_NIGHT_RED == -1
#undef AMBIENT_NIGHT_RED
										#define AMBIENT_NIGHT_RED 0.5
#endif
#if AMBIENT_NIGHT_GREEN == -1
#undef AMBIENT_NIGHT_GREEN
										#define AMBIENT_NIGHT_GREEN 0.6
#endif
#if AMBIENT_NIGHT_BLUE == -1
#undef AMBIENT_NIGHT_BLUE
										#define AMBIENT_NIGHT_BLUE 1.0
#endif
#if AMBIENT_NIGHT_BRIGHTNESS == -1
#undef AMBIENT_NIGHT_BRIGHTNESS
										#define AMBIENT_NIGHT_BRIGHTNESS 0.25
#endif






#if SKYLIGHT_SUNRISE_RED == -1
#undef SKYLIGHT_SUNRISE_RED
										#define SKYLIGHT_SUNRISE_RED 1.1
#endif
#if SKYLIGHT_SUNRISE_GREEN == -1
#undef SKYLIGHT_SUNRISE_GREEN
										#define SKYLIGHT_SUNRISE_GREEN 0.8
#endif
#if SKYLIGHT_SUNRISE_BLUE == -1
#undef SKYLIGHT_SUNRISE_BLUE
										#define SKYLIGHT_SUNRISE_BLUE 0.1
#endif
#if SKYLIGHT_SUNRISE_BRIGHTNESS == -1
#undef SKYLIGHT_SUNRISE_BRIGHTNESS
										#define SKYLIGHT_SUNRISE_BRIGHTNESS 5.0
#endif



#if AMBIENT_SUNRISE_RED == -1
#undef AMBIENT_SUNRISE_RED
										#define AMBIENT_SUNRISE_RED 1.0
#endif
#if AMBIENT_SUNRISE_GREEN == -1
#undef AMBIENT_SUNRISE_GREEN
										#define AMBIENT_SUNRISE_GREEN 1.0
#endif
#if AMBIENT_SUNRISE_BLUE == -1
#undef AMBIENT_SUNRISE_BLUE
										#define AMBIENT_SUNRISE_BLUE 1.0
#endif
#if AMBIENT_SUNRISE_BRIGHTNESS == -1
#undef AMBIENT_SUNRISE_BRIGHTNESS
										#define AMBIENT_SUNRISE_BRIGHTNESS 0.5
#endif






#if SKYLIGHT_SUNSET_RED == -1
#undef SKYLIGHT_SUNSET_RED
										#define SKYLIGHT_SUNSET_RED 1.3
#endif
#if SKYLIGHT_SUNSET_GREEN == -1
#undef SKYLIGHT_SUNSET_GREEN
										#define SKYLIGHT_SUNSET_GREEN 0.5
#endif
#if SKYLIGHT_SUNSET_BLUE == -1
#undef SKYLIGHT_SUNSET_BLUE
										#define SKYLIGHT_SUNSET_BLUE 0.0
#endif
#if SKYLIGHT_SUNSET_BRIGHTNESS == -1
#undef SKYLIGHT_SUNSET_BRIGHTNESS
										#define SKYLIGHT_SUNSET_BRIGHTNESS 5.0
#endif



#if AMBIENT_SUNSET_RED == -1
#undef AMBIENT_SUNSET_RED
										#define AMBIENT_SUNSET_RED 1.0
#endif
#if AMBIENT_SUNSET_GREEN == -1
#undef AMBIENT_SUNSET_GREEN
										#define AMBIENT_SUNSET_GREEN 1.0
#endif
#if AMBIENT_SUNSET_BLUE == -1
#undef AMBIENT_SUNSET_BLUE
										#define AMBIENT_SUNSET_BLUE 1.0
#endif
#if AMBIENT_SUNSET_BRIGHTNESS == -1
#undef AMBIENT_SUNSET_BRIGHTNESS
										#define AMBIENT_SUNSET_BRIGHTNESS 0.5
#endif












#if SHADOWS_ENABLED == -1
#undef SHADOWS_ENABLED
										#define SHADOWS_ENABLED 1
#endif
#if EXCLUDE_FOLIAGE == -1
#undef EXCLUDE_FOLIAGE
										#define EXCLUDE_FOLIAGE 0
#endif
#if SHADOW_FILTERING == -1
#undef SHADOW_FILTERING
										#define SHADOW_FILTERING 2
#endif
#if SHADOWS_NOISE == -1
#undef SHADOWS_NOISE
										#define SHADOWS_NOISE 0.3
#endif
#if SHADOW_DISTORT_ADDITION == -1
#undef SHADOW_DISTORT_ADDITION
										#define SHADOW_DISTORT_ADDITION 0.09
#endif
#if SIDE_SHADING == -1
#undef SIDE_SHADING
										#define SIDE_SHADING 0.0
#endif
#if RAIN_LIGHT_MULT == -1
#undef RAIN_LIGHT_MULT
										#define RAIN_LIGHT_MULT 0.7
#endif
#if USE_VANILLA_BRIGHTNESS == -1
#undef USE_VANILLA_BRIGHTNESS
										#define USE_VANILLA_BRIGHTNESS 1
#endif
#if BLOCKLIGHT_FLICKERING_ENABLED == -1
#undef BLOCKLIGHT_FLICKERING_ENABLED
										#define BLOCKLIGHT_FLICKERING_ENABLED 1
#endif






#if HANDHELD_LIGHT_ENABLED == -1
#undef HANDHELD_LIGHT_ENABLED
										#define HANDHELD_LIGHT_ENABLED 1
#endif
#if HANDHELD_LIGHT_DISTANCE == -1
#undef HANDHELD_LIGHT_DISTANCE
										#define HANDHELD_LIGHT_DISTANCE 25
#endif
#if HANDHELD_LIGHT_BRIGHTNESS == -1
#undef HANDHELD_LIGHT_BRIGHTNESS
										#define HANDHELD_LIGHT_BRIGHTNESS 1.0
#endif












#if WATER_REFLECTIONS_ENABLED == -1
#undef WATER_REFLECTIONS_ENABLED
										#define WATER_REFLECTIONS_ENABLED 1
#endif
#if WATER_REFLECTION_AMOUNT == -1
#undef WATER_REFLECTION_AMOUNT
										#define WATER_REFLECTION_AMOUNT 0.7
#endif
#if WATER_REFLECTION_FRESNEL == -1
#undef WATER_REFLECTION_FRESNEL
										#define WATER_REFLECTION_FRESNEL 0.8
#endif



#if RAIN_REFLECTIONS_ENABLED == -1
#undef RAIN_REFLECTIONS_ENABLED
										#define RAIN_REFLECTIONS_ENABLED 1
#endif
#if RAIN_REFLECTION_COVERAGE == -1
#undef RAIN_REFLECTION_COVERAGE
										#define RAIN_REFLECTION_COVERAGE 0.4
#endif
#if RAIN_REFLECTION_MIN == -1
#undef RAIN_REFLECTION_MIN
										#define RAIN_REFLECTION_MIN 0.2
#endif
#if RAIN_REFLECTION_SLOPE == -1
#undef RAIN_REFLECTION_SLOPE
										#define RAIN_REFLECTION_SLOPE 2.0
#endif
#if RAIN_REFLECTION_AMOUNT == -1
#undef RAIN_REFLECTION_AMOUNT
										#define RAIN_REFLECTION_AMOUNT 0.9
#endif
#if RAIN_REFLECTION_FRESNEL == -1
#undef RAIN_REFLECTION_FRESNEL
										#define RAIN_REFLECTION_FRESNEL 0.3
#endif



#if REFLECTION_ITERATIONS == -1
#undef REFLECTION_ITERATIONS
										#define REFLECTION_ITERATIONS 40
#endif
#if REFLECTION_STEP_INCREASE == -1
#undef REFLECTION_STEP_INCREASE
										#define REFLECTION_STEP_INCREASE 1.1
#endif






#if SSAO_ENABLED == -1
#undef SSAO_ENABLED
										#define SSAO_ENABLED 1
#endif
#if AO_AMOUNT == -1
#undef AO_AMOUNT
										#define AO_AMOUNT 1.0
#endif
#if AO_SIZE == -1
#undef AO_SIZE
										#define AO_SIZE 2.0
#endif
#if AO_QUALITY == -1
#undef AO_QUALITY
										#define AO_QUALITY 3
#endif
#if SSAO_APPLICATION_TYPE == -1
#undef SSAO_APPLICATION_TYPE
										#define SSAO_APPLICATION_TYPE 1
#endif






#if BLOOM_ENABLED == -1
#undef BLOOM_ENABLED
										#define BLOOM_ENABLED 1
#endif
#if BLOOM_AMOUNT == -1
#undef BLOOM_AMOUNT
										#define BLOOM_AMOUNT 5.0
#endif
#if BLOOM_QUALITY == -1
#undef BLOOM_QUALITY
										#define BLOOM_QUALITY 3
#endif
#if BLOOM_COMPUTE_COUNT == -1
#undef BLOOM_COMPUTE_COUNT
										#define BLOOM_COMPUTE_COUNT 1
#endif
#if BLOOM_LOW_CUTOFF == -1
#undef BLOOM_LOW_CUTOFF
										#define BLOOM_LOW_CUTOFF 0.6
#endif
#if BLOOM_HIGH_CUTOFF == -1
#undef BLOOM_HIGH_CUTOFF
										#define BLOOM_HIGH_CUTOFF 1.0
#endif
#if BLOOM_SIZE == -1
#undef BLOOM_SIZE
										#define BLOOM_SIZE 3.0
#endif
#if BLOOM_NETHER_MULT == -1
#undef BLOOM_NETHER_MULT
										#define BLOOM_NETHER_MULT 2.0
#endif
#if BLOOM_SKY_BRIGHTNESS == -1
#undef BLOOM_SKY_BRIGHTNESS
										#define BLOOM_SKY_BRIGHTNESS 0.5
#endif
#if BLOOM_ENTITY_BRIGHTNESS == -1
#undef BLOOM_ENTITY_BRIGHTNESS
										#define BLOOM_ENTITY_BRIGHTNESS 0.5
#endif
#if BLOOM_CLOUD_BRIGHTNESS == -1
#undef BLOOM_CLOUD_BRIGHTNESS
										#define BLOOM_CLOUD_BRIGHTNESS 0.3
#endif
#if BLOOM_HAND_BRIGHTNESS == -1
#undef BLOOM_HAND_BRIGHTNESS
										#define BLOOM_HAND_BRIGHTNESS 0.3
#endif






#if DEPTH_SUNRAYS_ENABLED == -1
#undef DEPTH_SUNRAYS_ENABLED
										#define DEPTH_SUNRAYS_ENABLED 0
#endif
#if VOL_SUNRAYS_ENABLED == -1
#undef VOL_SUNRAYS_ENABLED
										#define VOL_SUNRAYS_ENABLED 1
#endif
#if SUNRAYS_STYLE == -1
#undef SUNRAYS_STYLE
										#define SUNRAYS_STYLE 1
#endif
#if SUNRAYS_QUALITY == -1
#undef SUNRAYS_QUALITY
										#define SUNRAYS_QUALITY 4
#endif
#if SUNRAYS_COMPUTE_COUNT == -1
#undef SUNRAYS_COMPUTE_COUNT
										#define SUNRAYS_COMPUTE_COUNT 1
#endif
#if SUNRAYS_FLICKERING_FIX == -1
#undef SUNRAYS_FLICKERING_FIX
										#define SUNRAYS_FLICKERING_FIX 0
#endif
#if SUNRAYS_AMOUNT_DAY == -1
#undef SUNRAYS_AMOUNT_DAY
										#define SUNRAYS_AMOUNT_DAY 0.4
#endif
#if SUNRAYS_AMOUNT_NIGHT == -1
#undef SUNRAYS_AMOUNT_NIGHT
										#define SUNRAYS_AMOUNT_NIGHT 0.05
#endif
#if SUNRAYS_AMOUNT_SUNRISE == -1
#undef SUNRAYS_AMOUNT_SUNRISE
										#define SUNRAYS_AMOUNT_SUNRISE 0.4
#endif
#if SUNRAYS_AMOUNT_SUNSET == -1
#undef SUNRAYS_AMOUNT_SUNSET
										#define SUNRAYS_AMOUNT_SUNSET 0.4
#endif
#if SUNRAYS_SUN_RED == -1
#undef SUNRAYS_SUN_RED
										#define SUNRAYS_SUN_RED 1.0
#endif
#if SUNRAYS_SUN_GREEN == -1
#undef SUNRAYS_SUN_GREEN
										#define SUNRAYS_SUN_GREEN 0.65
#endif
#if SUNRAYS_SUN_BLUE == -1
#undef SUNRAYS_SUN_BLUE
										#define SUNRAYS_SUN_BLUE 0.4
#endif
#if SUNRAYS_MOON_RED == -1
#undef SUNRAYS_MOON_RED
										#define SUNRAYS_MOON_RED 0.6
#endif
#if SUNRAYS_MOON_GREEN == -1
#undef SUNRAYS_MOON_GREEN
										#define SUNRAYS_MOON_GREEN 0.7
#endif
#if SUNRAYS_MOON_BLUE == -1
#undef SUNRAYS_MOON_BLUE
										#define SUNRAYS_MOON_BLUE 1.0
#endif






#if DOF_ENABLED == -1
#undef DOF_ENABLED
										#define DOF_ENABLED 1
#endif
#if DOF_NEAR_BLUR_START == -1
#undef DOF_NEAR_BLUR_START
										#define DOF_NEAR_BLUR_START 0.03
#endif
#if DOF_NEAR_BLUR_SLOPE == -1
#undef DOF_NEAR_BLUR_SLOPE
										#define DOF_NEAR_BLUR_SLOPE 0.05
#endif
#if DOF_NEAR_BLUR_STRENGTH == -1
#undef DOF_NEAR_BLUR_STRENGTH
										#define DOF_NEAR_BLUR_STRENGTH 0.6
#endif
#if DOF_NEAR_BLUR_SIZE == -1
#undef DOF_NEAR_BLUR_SIZE
										#define DOF_NEAR_BLUR_SIZE 2.0
#endif
#if DOF_FAR_BLUR_START == -1
#undef DOF_FAR_BLUR_START
										#define DOF_FAR_BLUR_START 0.03
#endif
#if DOF_FAR_BLUR_SLOPE == -1
#undef DOF_FAR_BLUR_SLOPE
										#define DOF_FAR_BLUR_SLOPE 0.15
#endif
#if DOF_FAR_BLUR_STRENGTH == -1
#undef DOF_FAR_BLUR_STRENGTH
										#define DOF_FAR_BLUR_STRENGTH 0.4
#endif
#if DOF_FAR_BLUR_SIZE == -1
#undef DOF_FAR_BLUR_SIZE
										#define DOF_FAR_BLUR_SIZE 5.0
#endif
#if DOF_SLOPE_TYPE == -1
#undef DOF_SLOPE_TYPE
										#define DOF_SLOPE_TYPE 1
#endif
#if DOF_LOCKED_FOCAL_PLANE == -1
#undef DOF_LOCKED_FOCAL_PLANE
										#define DOF_LOCKED_FOCAL_PLANE 0
#endif
#if DOF_FOCAL_PLANE_DISTANCE == -1
#undef DOF_FOCAL_PLANE_DISTANCE
										#define DOF_FOCAL_PLANE_DISTANCE 10
#endif






#if TAA_ENABLED == -1
#undef TAA_ENABLED
										#define TAA_ENABLED 1
#endif






#if MOTION_BLUR_ENABLED == -1
#undef MOTION_BLUR_ENABLED
										#define MOTION_BLUR_ENABLED 0
#endif
#if MOTION_BLUR_AMOUNT == -1
#undef MOTION_BLUR_AMOUNT
										#define MOTION_BLUR_AMOUNT 0.5
#endif
#if MOTION_BLUR_QUALITY == -1
#undef MOTION_BLUR_QUALITY
										#define MOTION_BLUR_QUALITY 3
#endif






#if SHARPENING_ENABLED == -1
#undef SHARPENING_ENABLED
										#define SHARPENING_ENABLED 1
#endif
#if SHARPEN_AMOUNT == -1
#undef SHARPEN_AMOUNT
										#define SHARPEN_AMOUNT 0.8
#endif
#if SHARPEN_VEL_ADDITION == -1
#undef SHARPEN_VEL_ADDITION
										#define SHARPEN_VEL_ADDITION 1.3
#endif
#if SHARPENING_DETECT_SIZE == -1
#undef SHARPENING_DETECT_SIZE
										#define SHARPENING_DETECT_SIZE 5
#endif






#if GAMMA == -1
#undef GAMMA
										#define GAMMA 0
#endif
#if BRIGHTNESS == -1
#undef BRIGHTNESS
										#define BRIGHTNESS 1.1
#endif



#if SATURATION == -1
#undef SATURATION
										#define SATURATION 0.0
#endif
#if SATURATION_DARK == -1
#undef SATURATION_DARK
										#define SATURATION_DARK 0.1
#endif
#if SATURATION_LIGHT == -1
#undef SATURATION_LIGHT
										#define SATURATION_LIGHT -0.3
#endif



#if VIBRANCE == -1
#undef VIBRANCE
										#define VIBRANCE 0.0
#endif



#if CONTRAST == -1
#undef CONTRAST
										#define CONTRAST -0.1
#endif
#if CONTRAST_DETECT_RED == -1
#undef CONTRAST_DETECT_RED
										#define CONTRAST_DETECT_RED 0.5
#endif
#if CONTRAST_DETECT_GREEN == -1
#undef CONTRAST_DETECT_GREEN
										#define CONTRAST_DETECT_GREEN 0.5
#endif
#if CONTRAST_DETECT_BLUE == -1
#undef CONTRAST_DETECT_BLUE
										#define CONTRAST_DETECT_BLUE 0.5
#endif



#if TONEMAPPER == -1
#undef TONEMAPPER
										#define TONEMAPPER 0
#endif
#if USE_GAMMA_CORRECTION == -1
#undef USE_GAMMA_CORRECTION
										#define USE_GAMMA_CORRECTION 0
#endif






#if COLORBLIND_MODE == -1
#undef COLORBLIND_MODE
										#define COLORBLIND_MODE 0
#endif
#if COLORBLIND_INTENSITY == -1
#undef COLORBLIND_INTENSITY
										#define COLORBLIND_INTENSITY 1.0
#endif






#if VIGNETTE_ENABLED == -1
#undef VIGNETTE_ENABLED
										#define VIGNETTE_ENABLED 1
#endif
#if VIGNETTE_AMOUNT_SURFACE == -1
#undef VIGNETTE_AMOUNT_SURFACE
										#define VIGNETTE_AMOUNT_SURFACE 0.0
#endif
#if VIGNETTE_AMOUNT_UNDERGROUND == -1
#undef VIGNETTE_AMOUNT_UNDERGROUND
										#define VIGNETTE_AMOUNT_UNDERGROUND 0.8
#endif
#if VIGNETTE_SCALE == -1
#undef VIGNETTE_SCALE
										#define VIGNETTE_SCALE 1.0
#endif
#if VIGNETTE_NOISE_ENABLED == -1
#undef VIGNETTE_NOISE_ENABLED
										#define VIGNETTE_NOISE_ENABLED 1
#endif






#if WAVING_ENABLED == -1
#undef WAVING_ENABLED
										#define WAVING_ENABLED 1
#endif
#if WAVING_SPEED == -1
#undef WAVING_SPEED
										#define WAVING_SPEED 1.5
#endif
#if WAVING_WORLD_SCALE == -1
#undef WAVING_WORLD_SCALE
										#define WAVING_WORLD_SCALE 0.15
#endif
#if WAVING_AMOUNT_1 == -1
#undef WAVING_AMOUNT_1
										#define WAVING_AMOUNT_1 0.5
#endif
#if WAVING_AMOUNT_2 == -1
#undef WAVING_AMOUNT_2
										#define WAVING_AMOUNT_2 0.75
#endif
#if WAVING_AMOUNT_3 == -1
#undef WAVING_AMOUNT_3
										#define WAVING_AMOUNT_3 1.5
#endif
#if WAVING_RAIN_MULT == -1
#undef WAVING_RAIN_MULT
										#define WAVING_RAIN_MULT 3.0
#endif
#if WAVING_NIGHT_MULT == -1
#undef WAVING_NIGHT_MULT
										#define WAVING_NIGHT_MULT 0.1
#endif
#if HEIGHT_BASED_WAVING_ENABLED == -1
#undef HEIGHT_BASED_WAVING_ENABLED
										#define HEIGHT_BASED_WAVING_ENABLED 1
#endif



#if PHYSICALLY_WAVING_WATER_ENABLED == -1
#undef PHYSICALLY_WAVING_WATER_ENABLED
										#define PHYSICALLY_WAVING_WATER_ENABLED 1
#endif
#if WAVING_WATER_NORMALS_ENABLED == -1
#undef WAVING_WATER_NORMALS_ENABLED
										#define WAVING_WATER_NORMALS_ENABLED 1
#endif



#if UNDERWATER_WAVINESS_ENABLED == -1
#undef UNDERWATER_WAVINESS_ENABLED
										#define UNDERWATER_WAVINESS_ENABLED 1
#endif
#if UNDERWATER_WAVINESS_AMOUNT == -1
#undef UNDERWATER_WAVINESS_AMOUNT
										#define UNDERWATER_WAVINESS_AMOUNT 1.0
#endif
#if UNDERWATER_WAVINESS_SCALE == -1
#undef UNDERWATER_WAVINESS_SCALE
										#define UNDERWATER_WAVINESS_SCALE 1.0
#endif
#if UNDERWATER_WAVINESS_SPEED == -1
#undef UNDERWATER_WAVINESS_SPEED
										#define UNDERWATER_WAVINESS_SPEED 1.0
#endif






#if WATER_FRESNEL_ADDITION == -1
#undef WATER_FRESNEL_ADDITION
										#define WATER_FRESNEL_ADDITION 1
#endif
#if WATER_TRANSPARENCY == -1
#undef WATER_TRANSPARENCY
										#define WATER_TRANSPARENCY 0.1
#endif






#if ISOMETRIC_RENDERING_ENABLED == -1
#undef ISOMETRIC_RENDERING_ENABLED
										#define ISOMETRIC_RENDERING_ENABLED 0
#endif
#if ISOMETRIC_WORLD_SCALE == -1
#undef ISOMETRIC_WORLD_SCALE
										#define ISOMETRIC_WORLD_SCALE 32
#endif
#if ISOMETRIC_BACKWARD_VISIBILITY == -1
#undef ISOMETRIC_BACKWARD_VISIBILITY
										#define ISOMETRIC_BACKWARD_VISIBILITY 1
#endif
#if ISOMETRIC_FORWARD_VISIBILITY == -1
#undef ISOMETRIC_FORWARD_VISIBILITY
										#define ISOMETRIC_FORWARD_VISIBILITY 128
#endif












#if USE_BETTER_RAND == -1
#undef USE_BETTER_RAND
										#define USE_BETTER_RAND 0
#endif
#if SHOW_DANGEROUS_LIGHT == -1
#undef SHOW_DANGEROUS_LIGHT
										#define SHOW_DANGEROUS_LIGHT 0
#endif
#if USE_SIMPLE_LIGHT == -1
#undef USE_SIMPLE_LIGHT
										#define USE_SIMPLE_LIGHT 0
#endif
#if SSAO_SHOW_AMOUNT == -1
#undef SSAO_SHOW_AMOUNT
										#define SSAO_SHOW_AMOUNT 0
#endif
#if BLOOM_SHOW_ADDITION == -1
#undef BLOOM_SHOW_ADDITION
										#define BLOOM_SHOW_ADDITION 0
#endif
#if BLOOM_SHOW_FILTERED_TEXTURE == -1
#undef BLOOM_SHOW_FILTERED_TEXTURE
										#define BLOOM_SHOW_FILTERED_TEXTURE 0
#endif
#if SUNRAYS_SHOW_ADDITION == -1
#undef SUNRAYS_SHOW_ADDITION
										#define SUNRAYS_SHOW_ADDITION 0
#endif
#if DOF_SHOW_AMOUNTS == -1
#undef DOF_SHOW_AMOUNTS
										#define DOF_SHOW_AMOUNTS 0
#endif
#if REFLECTIVE_EVERYTHING == -1
#undef REFLECTIVE_EVERYTHING
										#define REFLECTIVE_EVERYTHING 0
#endif
#endif
#if STYLE == 2
#if DARKEN_SKY_UNDERGROUND == -1
#undef DARKEN_SKY_UNDERGROUND
										#define DARKEN_SKY_UNDERGROUND 1
#endif
#if STARS_BRIGHTNESS == -1
#undef STARS_BRIGHTNESS
										#define STARS_BRIGHTNESS 2.5
#endif
#if DARKEN_STARS_NEAR_BLOCKLIGHT == -1
#undef DARKEN_STARS_NEAR_BLOCKLIGHT
										#define DARKEN_STARS_NEAR_BLOCKLIGHT 1
#endif
#if DARKENED_STARS_BRIGHTNESS == -1
#undef DARKENED_STARS_BRIGHTNESS
										#define DARKENED_STARS_BRIGHTNESS 0.5
#endif
#if WEATHER_TRANSPARENCY == -1
#undef WEATHER_TRANSPARENCY
										#define WEATHER_TRANSPARENCY 0.25
#endif
#if CLOUD_TRANSPARENCY == -1
#undef CLOUD_TRANSPARENCY
										#define CLOUD_TRANSPARENCY 0.3
#endif
#if HIDE_NEARBY_CLOUDS == -1
#undef HIDE_NEARBY_CLOUDS
										#define HIDE_NEARBY_CLOUDS 0
#endif






#if FOG_ENABLED == -1
#undef FOG_ENABLED
										#define FOG_ENABLED 1
#endif
#if FOG_HEIGHT_SCALE == -1
#undef FOG_HEIGHT_SCALE
										#define FOG_HEIGHT_SCALE 2.0
#endif
#if FOG_EXTRA_CLOUDS_DISTANCE == -1
#undef FOG_EXTRA_CLOUDS_DISTANCE
										#define FOG_EXTRA_CLOUDS_DISTANCE 10.0
#endif
#if FOG_CURVE == -1
#undef FOG_CURVE
										#define FOG_CURVE 1
#endif



#if FOG_AIR_START == -1
#undef FOG_AIR_START
										#define FOG_AIR_START 0.5
#endif
#if FOG_AIR_END == -1
#undef FOG_AIR_END
										#define FOG_AIR_END 1.0
#endif
#if FOG_AIR_MIN == -1
#undef FOG_AIR_MIN
										#define FOG_AIR_MIN 0.0
#endif
#if FOG_AIR_RAIN_START == -1
#undef FOG_AIR_RAIN_START
										#define FOG_AIR_RAIN_START 0.0
#endif
#if FOG_AIR_RAIN_END == -1
#undef FOG_AIR_RAIN_END
										#define FOG_AIR_RAIN_END 1.0
#endif
#if FOG_AIR_RAIN_MIN == -1
#undef FOG_AIR_RAIN_MIN
										#define FOG_AIR_RAIN_MIN 0.1
#endif
#if FOG_WATER_START == -1
#undef FOG_WATER_START
										#define FOG_WATER_START 0.0
#endif
#if FOG_WATER_END == -1
#undef FOG_WATER_END
										#define FOG_WATER_END 60
#endif
#if FOG_WATER_MIN == -1
#undef FOG_WATER_MIN
										#define FOG_WATER_MIN 0.2
#endif
#if FOG_LAVA_START == -1
#undef FOG_LAVA_START
										#define FOG_LAVA_START 0.0
#endif
#if FOG_LAVA_END == -1
#undef FOG_LAVA_END
										#define FOG_LAVA_END 3
#endif
#if FOG_LAVA_MIN == -1
#undef FOG_LAVA_MIN
										#define FOG_LAVA_MIN 0.9
#endif
#if FOG_POWDERED_SNOW_START == -1
#undef FOG_POWDERED_SNOW_START
										#define FOG_POWDERED_SNOW_START 0.0
#endif
#if FOG_POWDERED_SNOW_END == -1
#undef FOG_POWDERED_SNOW_END
										#define FOG_POWDERED_SNOW_END 10
#endif
#if FOG_POWDERED_SNOW_MIN == -1
#undef FOG_POWDERED_SNOW_MIN
										#define FOG_POWDERED_SNOW_MIN 0.8
#endif






#if BLOCK_RED == -1
#undef BLOCK_RED
										#define BLOCK_RED 1.0
#endif
#if BLOCK_GREEN == -1
#undef BLOCK_GREEN
										#define BLOCK_GREEN 0.85
#endif
#if BLOCK_BLUE == -1
#undef BLOCK_BLUE
										#define BLOCK_BLUE 0.65
#endif
#if BLOCK_BRIGHTNESS == -1
#undef BLOCK_BRIGHTNESS
										#define BLOCK_BRIGHTNESS 1.2
#endif
#if BLOCK_BRIGHTNESS_CURVE == -1
#undef BLOCK_BRIGHTNESS_CURVE
										#define BLOCK_BRIGHTNESS_CURVE 1
#endif






#if CAVE_AMBIENT_RED == -1
#undef CAVE_AMBIENT_RED
										#define CAVE_AMBIENT_RED 1.0
#endif
#if CAVE_AMBIENT_GREEN == -1
#undef CAVE_AMBIENT_GREEN
										#define CAVE_AMBIENT_GREEN 0.8
#endif
#if CAVE_AMBIENT_BLUE == -1
#undef CAVE_AMBIENT_BLUE
										#define CAVE_AMBIENT_BLUE 0.75
#endif
#if CAVE_AMBIENT_BRIGHTNESS == -1
#undef CAVE_AMBIENT_BRIGHTNESS
										#define CAVE_AMBIENT_BRIGHTNESS 0.17
#endif






#if SKYLIGHT_DAY_RED == -1
#undef SKYLIGHT_DAY_RED
										#define SKYLIGHT_DAY_RED 1.0
#endif
#if SKYLIGHT_DAY_GREEN == -1
#undef SKYLIGHT_DAY_GREEN
										#define SKYLIGHT_DAY_GREEN 1.0
#endif
#if SKYLIGHT_DAY_BLUE == -1
#undef SKYLIGHT_DAY_BLUE
										#define SKYLIGHT_DAY_BLUE 1.0
#endif
#if SKYLIGHT_DAY_BRIGHTNESS == -1
#undef SKYLIGHT_DAY_BRIGHTNESS
										#define SKYLIGHT_DAY_BRIGHTNESS 0.85
#endif



#if AMBIENT_DAY_RED == -1
#undef AMBIENT_DAY_RED
										#define AMBIENT_DAY_RED 0.95
#endif
#if AMBIENT_DAY_GREEN == -1
#undef AMBIENT_DAY_GREEN
										#define AMBIENT_DAY_GREEN 1.0
#endif
#if AMBIENT_DAY_BLUE == -1
#undef AMBIENT_DAY_BLUE
										#define AMBIENT_DAY_BLUE 1.0
#endif
#if AMBIENT_DAY_BRIGHTNESS == -1
#undef AMBIENT_DAY_BRIGHTNESS
										#define AMBIENT_DAY_BRIGHTNESS 0.75
#endif






#if SKYLIGHT_NIGHT_RED == -1
#undef SKYLIGHT_NIGHT_RED
										#define SKYLIGHT_NIGHT_RED 1.0
#endif
#if SKYLIGHT_NIGHT_GREEN == -1
#undef SKYLIGHT_NIGHT_GREEN
										#define SKYLIGHT_NIGHT_GREEN 1.05
#endif
#if SKYLIGHT_NIGHT_BLUE == -1
#undef SKYLIGHT_NIGHT_BLUE
										#define SKYLIGHT_NIGHT_BLUE 1.0
#endif
#if SKYLIGHT_NIGHT_BRIGHTNESS == -1
#undef SKYLIGHT_NIGHT_BRIGHTNESS
										#define SKYLIGHT_NIGHT_BRIGHTNESS 0.55
#endif



#if AMBIENT_NIGHT_RED == -1
#undef AMBIENT_NIGHT_RED
										#define AMBIENT_NIGHT_RED 0.6
#endif
#if AMBIENT_NIGHT_GREEN == -1
#undef AMBIENT_NIGHT_GREEN
										#define AMBIENT_NIGHT_GREEN 0.7
#endif
#if AMBIENT_NIGHT_BLUE == -1
#undef AMBIENT_NIGHT_BLUE
										#define AMBIENT_NIGHT_BLUE 1.0
#endif
#if AMBIENT_NIGHT_BRIGHTNESS == -1
#undef AMBIENT_NIGHT_BRIGHTNESS
										#define AMBIENT_NIGHT_BRIGHTNESS 0.35
#endif






#if SKYLIGHT_SUNRISE_RED == -1
#undef SKYLIGHT_SUNRISE_RED
										#define SKYLIGHT_SUNRISE_RED 1.5
#endif
#if SKYLIGHT_SUNRISE_GREEN == -1
#undef SKYLIGHT_SUNRISE_GREEN
										#define SKYLIGHT_SUNRISE_GREEN 0.6
#endif
#if SKYLIGHT_SUNRISE_BLUE == -1
#undef SKYLIGHT_SUNRISE_BLUE
										#define SKYLIGHT_SUNRISE_BLUE -0.1
#endif
#if SKYLIGHT_SUNRISE_BRIGHTNESS == -1
#undef SKYLIGHT_SUNRISE_BRIGHTNESS
										#define SKYLIGHT_SUNRISE_BRIGHTNESS 2.0
#endif



#if AMBIENT_SUNRISE_RED == -1
#undef AMBIENT_SUNRISE_RED
										#define AMBIENT_SUNRISE_RED 1.05
#endif
#if AMBIENT_SUNRISE_GREEN == -1
#undef AMBIENT_SUNRISE_GREEN
										#define AMBIENT_SUNRISE_GREEN 0.9
#endif
#if AMBIENT_SUNRISE_BLUE == -1
#undef AMBIENT_SUNRISE_BLUE
										#define AMBIENT_SUNRISE_BLUE 0.7
#endif
#if AMBIENT_SUNRISE_BRIGHTNESS == -1
#undef AMBIENT_SUNRISE_BRIGHTNESS
										#define AMBIENT_SUNRISE_BRIGHTNESS 0.65
#endif






#if SKYLIGHT_SUNSET_RED == -1
#undef SKYLIGHT_SUNSET_RED
										#define SKYLIGHT_SUNSET_RED 1.5
#endif
#if SKYLIGHT_SUNSET_GREEN == -1
#undef SKYLIGHT_SUNSET_GREEN
										#define SKYLIGHT_SUNSET_GREEN 0.3
#endif
#if SKYLIGHT_SUNSET_BLUE == -1
#undef SKYLIGHT_SUNSET_BLUE
										#define SKYLIGHT_SUNSET_BLUE -0.1
#endif
#if SKYLIGHT_SUNSET_BRIGHTNESS == -1
#undef SKYLIGHT_SUNSET_BRIGHTNESS
										#define SKYLIGHT_SUNSET_BRIGHTNESS 2.0
#endif



#if AMBIENT_SUNSET_RED == -1
#undef AMBIENT_SUNSET_RED
										#define AMBIENT_SUNSET_RED 1.1
#endif
#if AMBIENT_SUNSET_GREEN == -1
#undef AMBIENT_SUNSET_GREEN
										#define AMBIENT_SUNSET_GREEN 0.8
#endif
#if AMBIENT_SUNSET_BLUE == -1
#undef AMBIENT_SUNSET_BLUE
										#define AMBIENT_SUNSET_BLUE 0.6
#endif
#if AMBIENT_SUNSET_BRIGHTNESS == -1
#undef AMBIENT_SUNSET_BRIGHTNESS
										#define AMBIENT_SUNSET_BRIGHTNESS 0.65
#endif












#if SHADOWS_ENABLED == -1
#undef SHADOWS_ENABLED
										#define SHADOWS_ENABLED 1
#endif
#if EXCLUDE_FOLIAGE == -1
#undef EXCLUDE_FOLIAGE
										#define EXCLUDE_FOLIAGE 0
#endif
#if SHADOW_FILTERING == -1
#undef SHADOW_FILTERING
										#define SHADOW_FILTERING 2
#endif
#if SHADOWS_NOISE == -1
#undef SHADOWS_NOISE
										#define SHADOWS_NOISE 0.1
#endif
#if SHADOW_DISTORT_ADDITION == -1
#undef SHADOW_DISTORT_ADDITION
										#define SHADOW_DISTORT_ADDITION 0.09
#endif
#if SIDE_SHADING == -1
#undef SIDE_SHADING
										#define SIDE_SHADING 0.4
#endif
#if RAIN_LIGHT_MULT == -1
#undef RAIN_LIGHT_MULT
										#define RAIN_LIGHT_MULT 0.8
#endif
#if USE_VANILLA_BRIGHTNESS == -1
#undef USE_VANILLA_BRIGHTNESS
										#define USE_VANILLA_BRIGHTNESS 1
#endif
#if BLOCKLIGHT_FLICKERING_ENABLED == -1
#undef BLOCKLIGHT_FLICKERING_ENABLED
										#define BLOCKLIGHT_FLICKERING_ENABLED 1
#endif






#if HANDHELD_LIGHT_ENABLED == -1
#undef HANDHELD_LIGHT_ENABLED
										#define HANDHELD_LIGHT_ENABLED 1
#endif
#if HANDHELD_LIGHT_DISTANCE == -1
#undef HANDHELD_LIGHT_DISTANCE
										#define HANDHELD_LIGHT_DISTANCE 18
#endif
#if HANDHELD_LIGHT_BRIGHTNESS == -1
#undef HANDHELD_LIGHT_BRIGHTNESS
										#define HANDHELD_LIGHT_BRIGHTNESS 0.7
#endif












#if WATER_REFLECTIONS_ENABLED == -1
#undef WATER_REFLECTIONS_ENABLED
										#define WATER_REFLECTIONS_ENABLED 1
#endif
#if WATER_REFLECTION_AMOUNT == -1
#undef WATER_REFLECTION_AMOUNT
										#define WATER_REFLECTION_AMOUNT 0.9
#endif
#if WATER_REFLECTION_FRESNEL == -1
#undef WATER_REFLECTION_FRESNEL
										#define WATER_REFLECTION_FRESNEL 0.5
#endif



#if RAIN_REFLECTIONS_ENABLED == -1
#undef RAIN_REFLECTIONS_ENABLED
										#define RAIN_REFLECTIONS_ENABLED 1
#endif
#if RAIN_REFLECTION_COVERAGE == -1
#undef RAIN_REFLECTION_COVERAGE
										#define RAIN_REFLECTION_COVERAGE 0.6
#endif
#if RAIN_REFLECTION_MIN == -1
#undef RAIN_REFLECTION_MIN
										#define RAIN_REFLECTION_MIN 0.5
#endif
#if RAIN_REFLECTION_SLOPE == -1
#undef RAIN_REFLECTION_SLOPE
										#define RAIN_REFLECTION_SLOPE 1.5
#endif
#if RAIN_REFLECTION_AMOUNT == -1
#undef RAIN_REFLECTION_AMOUNT
										#define RAIN_REFLECTION_AMOUNT 0.7
#endif
#if RAIN_REFLECTION_FRESNEL == -1
#undef RAIN_REFLECTION_FRESNEL
										#define RAIN_REFLECTION_FRESNEL 0.5
#endif



#if REFLECTION_ITERATIONS == -1
#undef REFLECTION_ITERATIONS
										#define REFLECTION_ITERATIONS 40
#endif
#if REFLECTION_STEP_INCREASE == -1
#undef REFLECTION_STEP_INCREASE
										#define REFLECTION_STEP_INCREASE 1.1
#endif






#if SSAO_ENABLED == -1
#undef SSAO_ENABLED
										#define SSAO_ENABLED 1
#endif
#if AO_AMOUNT == -1
#undef AO_AMOUNT
										#define AO_AMOUNT 1.5
#endif
#if AO_SIZE == -1
#undef AO_SIZE
										#define AO_SIZE 0.7
#endif
#if AO_QUALITY == -1
#undef AO_QUALITY
										#define AO_QUALITY 3
#endif
#if SSAO_APPLICATION_TYPE == -1
#undef SSAO_APPLICATION_TYPE
										#define SSAO_APPLICATION_TYPE 1
#endif






#if BLOOM_ENABLED == -1
#undef BLOOM_ENABLED
										#define BLOOM_ENABLED 1
#endif
#if BLOOM_AMOUNT == -1
#undef BLOOM_AMOUNT
										#define BLOOM_AMOUNT 2.5
#endif
#if BLOOM_QUALITY == -1
#undef BLOOM_QUALITY
										#define BLOOM_QUALITY 3
#endif
#if BLOOM_COMPUTE_COUNT == -1
#undef BLOOM_COMPUTE_COUNT
										#define BLOOM_COMPUTE_COUNT 1
#endif
#if BLOOM_LOW_CUTOFF == -1
#undef BLOOM_LOW_CUTOFF
										#define BLOOM_LOW_CUTOFF 0.6
#endif
#if BLOOM_HIGH_CUTOFF == -1
#undef BLOOM_HIGH_CUTOFF
										#define BLOOM_HIGH_CUTOFF 0.9
#endif
#if BLOOM_SIZE == -1
#undef BLOOM_SIZE
										#define BLOOM_SIZE 1.5
#endif
#if BLOOM_NETHER_MULT == -1
#undef BLOOM_NETHER_MULT
										#define BLOOM_NETHER_MULT 2.5
#endif
#if BLOOM_SKY_BRIGHTNESS == -1
#undef BLOOM_SKY_BRIGHTNESS
										#define BLOOM_SKY_BRIGHTNESS 0.9
#endif
#if BLOOM_ENTITY_BRIGHTNESS == -1
#undef BLOOM_ENTITY_BRIGHTNESS
										#define BLOOM_ENTITY_BRIGHTNESS 0.7
#endif
#if BLOOM_CLOUD_BRIGHTNESS == -1
#undef BLOOM_CLOUD_BRIGHTNESS
										#define BLOOM_CLOUD_BRIGHTNESS 0.6
#endif
#if BLOOM_HAND_BRIGHTNESS == -1
#undef BLOOM_HAND_BRIGHTNESS
										#define BLOOM_HAND_BRIGHTNESS 0.5
#endif






#if DEPTH_SUNRAYS_ENABLED == -1
#undef DEPTH_SUNRAYS_ENABLED
										#define DEPTH_SUNRAYS_ENABLED 0
#endif
#if VOL_SUNRAYS_ENABLED == -1
#undef VOL_SUNRAYS_ENABLED
										#define VOL_SUNRAYS_ENABLED 1
#endif
#if SUNRAYS_STYLE == -1
#undef SUNRAYS_STYLE
										#define SUNRAYS_STYLE 1
#endif
#if SUNRAYS_QUALITY == -1
#undef SUNRAYS_QUALITY
										#define SUNRAYS_QUALITY 4
#endif
#if SUNRAYS_COMPUTE_COUNT == -1
#undef SUNRAYS_COMPUTE_COUNT
										#define SUNRAYS_COMPUTE_COUNT 1
#endif
#if SUNRAYS_FLICKERING_FIX == -1
#undef SUNRAYS_FLICKERING_FIX
										#define SUNRAYS_FLICKERING_FIX 0
#endif
#if SUNRAYS_AMOUNT_DAY == -1
#undef SUNRAYS_AMOUNT_DAY
										#define SUNRAYS_AMOUNT_DAY 0.5
#endif
#if SUNRAYS_AMOUNT_NIGHT == -1
#undef SUNRAYS_AMOUNT_NIGHT
										#define SUNRAYS_AMOUNT_NIGHT 0.4
#endif
#if SUNRAYS_AMOUNT_SUNRISE == -1
#undef SUNRAYS_AMOUNT_SUNRISE
										#define SUNRAYS_AMOUNT_SUNRISE 1.0
#endif
#if SUNRAYS_AMOUNT_SUNSET == -1
#undef SUNRAYS_AMOUNT_SUNSET
										#define SUNRAYS_AMOUNT_SUNSET 1.0
#endif
#if SUNRAYS_SUN_RED == -1
#undef SUNRAYS_SUN_RED
										#define SUNRAYS_SUN_RED 1.0
#endif
#if SUNRAYS_SUN_GREEN == -1
#undef SUNRAYS_SUN_GREEN
										#define SUNRAYS_SUN_GREEN 0.4
#endif
#if SUNRAYS_SUN_BLUE == -1
#undef SUNRAYS_SUN_BLUE
										#define SUNRAYS_SUN_BLUE 0.0
#endif
#if SUNRAYS_MOON_RED == -1
#undef SUNRAYS_MOON_RED
										#define SUNRAYS_MOON_RED 0.1
#endif
#if SUNRAYS_MOON_GREEN == -1
#undef SUNRAYS_MOON_GREEN
										#define SUNRAYS_MOON_GREEN 0.55
#endif
#if SUNRAYS_MOON_BLUE == -1
#undef SUNRAYS_MOON_BLUE
										#define SUNRAYS_MOON_BLUE 1.2
#endif






#if DOF_ENABLED == -1
#undef DOF_ENABLED
										#define DOF_ENABLED 0
#endif
#if DOF_NEAR_BLUR_START == -1
#undef DOF_NEAR_BLUR_START
										#define DOF_NEAR_BLUR_START 0.03
#endif
#if DOF_NEAR_BLUR_SLOPE == -1
#undef DOF_NEAR_BLUR_SLOPE
										#define DOF_NEAR_BLUR_SLOPE 0.05
#endif
#if DOF_NEAR_BLUR_STRENGTH == -1
#undef DOF_NEAR_BLUR_STRENGTH
										#define DOF_NEAR_BLUR_STRENGTH 0.8
#endif
#if DOF_NEAR_BLUR_SIZE == -1
#undef DOF_NEAR_BLUR_SIZE
										#define DOF_NEAR_BLUR_SIZE 2.0
#endif
#if DOF_FAR_BLUR_START == -1
#undef DOF_FAR_BLUR_START
										#define DOF_FAR_BLUR_START 0.1
#endif
#if DOF_FAR_BLUR_SLOPE == -1
#undef DOF_FAR_BLUR_SLOPE
										#define DOF_FAR_BLUR_SLOPE 0.3
#endif
#if DOF_FAR_BLUR_STRENGTH == -1
#undef DOF_FAR_BLUR_STRENGTH
										#define DOF_FAR_BLUR_STRENGTH 0.9
#endif
#if DOF_FAR_BLUR_SIZE == -1
#undef DOF_FAR_BLUR_SIZE
										#define DOF_FAR_BLUR_SIZE 2.0
#endif
#if DOF_SLOPE_TYPE == -1
#undef DOF_SLOPE_TYPE
										#define DOF_SLOPE_TYPE 1
#endif
#if DOF_LOCKED_FOCAL_PLANE == -1
#undef DOF_LOCKED_FOCAL_PLANE
										#define DOF_LOCKED_FOCAL_PLANE 0
#endif
#if DOF_FOCAL_PLANE_DISTANCE == -1
#undef DOF_FOCAL_PLANE_DISTANCE
										#define DOF_FOCAL_PLANE_DISTANCE 10
#endif






#if TAA_ENABLED == -1
#undef TAA_ENABLED
										#define TAA_ENABLED 1
#endif






#if MOTION_BLUR_ENABLED == -1
#undef MOTION_BLUR_ENABLED
										#define MOTION_BLUR_ENABLED 0
#endif
#if MOTION_BLUR_AMOUNT == -1
#undef MOTION_BLUR_AMOUNT
										#define MOTION_BLUR_AMOUNT 0.5
#endif
#if MOTION_BLUR_QUALITY == -1
#undef MOTION_BLUR_QUALITY
										#define MOTION_BLUR_QUALITY 3
#endif






#if SHARPENING_ENABLED == -1
#undef SHARPENING_ENABLED
										#define SHARPENING_ENABLED 1
#endif
#if SHARPEN_AMOUNT == -1
#undef SHARPEN_AMOUNT
										#define SHARPEN_AMOUNT 1.5
#endif
#if SHARPEN_VEL_ADDITION == -1
#undef SHARPEN_VEL_ADDITION
										#define SHARPEN_VEL_ADDITION 0.7
#endif
#if SHARPENING_DETECT_SIZE == -1
#undef SHARPENING_DETECT_SIZE
										#define SHARPENING_DETECT_SIZE 5
#endif






#if GAMMA == -1
#undef GAMMA
										#define GAMMA 0
#endif
#if BRIGHTNESS == -1
#undef BRIGHTNESS
										#define BRIGHTNESS 1.05
#endif



#if SATURATION == -1
#undef SATURATION
										#define SATURATION -0.1
#endif
#if SATURATION_DARK == -1
#undef SATURATION_DARK
										#define SATURATION_DARK 0.0
#endif
#if SATURATION_LIGHT == -1
#undef SATURATION_LIGHT
										#define SATURATION_LIGHT 0.3
#endif



#if VIBRANCE == -1
#undef VIBRANCE
										#define VIBRANCE 0.5
#endif



#if CONTRAST == -1
#undef CONTRAST
										#define CONTRAST 0.3
#endif
#if CONTRAST_DETECT_RED == -1
#undef CONTRAST_DETECT_RED
										#define CONTRAST_DETECT_RED 0.5
#endif
#if CONTRAST_DETECT_GREEN == -1
#undef CONTRAST_DETECT_GREEN
										#define CONTRAST_DETECT_GREEN 0.5
#endif
#if CONTRAST_DETECT_BLUE == -1
#undef CONTRAST_DETECT_BLUE
										#define CONTRAST_DETECT_BLUE 0.5
#endif



#if TONEMAPPER == -1
#undef TONEMAPPER
										#define TONEMAPPER 0
#endif
#if USE_GAMMA_CORRECTION == -1
#undef USE_GAMMA_CORRECTION
										#define USE_GAMMA_CORRECTION 0
#endif






#if COLORBLIND_MODE == -1
#undef COLORBLIND_MODE
										#define COLORBLIND_MODE 0
#endif
#if COLORBLIND_INTENSITY == -1
#undef COLORBLIND_INTENSITY
										#define COLORBLIND_INTENSITY 1.0
#endif






#if VIGNETTE_ENABLED == -1
#undef VIGNETTE_ENABLED
										#define VIGNETTE_ENABLED 1
#endif
#if VIGNETTE_AMOUNT_SURFACE == -1
#undef VIGNETTE_AMOUNT_SURFACE
										#define VIGNETTE_AMOUNT_SURFACE 0.0
#endif
#if VIGNETTE_AMOUNT_UNDERGROUND == -1
#undef VIGNETTE_AMOUNT_UNDERGROUND
										#define VIGNETTE_AMOUNT_UNDERGROUND 0.8
#endif
#if VIGNETTE_SCALE == -1
#undef VIGNETTE_SCALE
										#define VIGNETTE_SCALE 1.5
#endif
#if VIGNETTE_NOISE_ENABLED == -1
#undef VIGNETTE_NOISE_ENABLED
										#define VIGNETTE_NOISE_ENABLED 1
#endif






#if WAVING_ENABLED == -1
#undef WAVING_ENABLED
										#define WAVING_ENABLED 1
#endif
#if WAVING_SPEED == -1
#undef WAVING_SPEED
										#define WAVING_SPEED 1.0
#endif
#if WAVING_WORLD_SCALE == -1
#undef WAVING_WORLD_SCALE
										#define WAVING_WORLD_SCALE 0.15
#endif
#if WAVING_AMOUNT_1 == -1
#undef WAVING_AMOUNT_1
										#define WAVING_AMOUNT_1 0.3
#endif
#if WAVING_AMOUNT_2 == -1
#undef WAVING_AMOUNT_2
										#define WAVING_AMOUNT_2 0.75
#endif
#if WAVING_AMOUNT_3 == -1
#undef WAVING_AMOUNT_3
										#define WAVING_AMOUNT_3 1.5
#endif
#if WAVING_RAIN_MULT == -1
#undef WAVING_RAIN_MULT
										#define WAVING_RAIN_MULT 2.5
#endif
#if WAVING_NIGHT_MULT == -1
#undef WAVING_NIGHT_MULT
										#define WAVING_NIGHT_MULT 0.7
#endif
#if HEIGHT_BASED_WAVING_ENABLED == -1
#undef HEIGHT_BASED_WAVING_ENABLED
										#define HEIGHT_BASED_WAVING_ENABLED 1
#endif



#if PHYSICALLY_WAVING_WATER_ENABLED == -1
#undef PHYSICALLY_WAVING_WATER_ENABLED
										#define PHYSICALLY_WAVING_WATER_ENABLED 1
#endif
#if WAVING_WATER_NORMALS_ENABLED == -1
#undef WAVING_WATER_NORMALS_ENABLED
										#define WAVING_WATER_NORMALS_ENABLED 1
#endif



#if UNDERWATER_WAVINESS_ENABLED == -1
#undef UNDERWATER_WAVINESS_ENABLED
										#define UNDERWATER_WAVINESS_ENABLED 1
#endif
#if UNDERWATER_WAVINESS_AMOUNT == -1
#undef UNDERWATER_WAVINESS_AMOUNT
										#define UNDERWATER_WAVINESS_AMOUNT 1.0
#endif
#if UNDERWATER_WAVINESS_SCALE == -1
#undef UNDERWATER_WAVINESS_SCALE
										#define UNDERWATER_WAVINESS_SCALE 1.0
#endif
#if UNDERWATER_WAVINESS_SPEED == -1
#undef UNDERWATER_WAVINESS_SPEED
										#define UNDERWATER_WAVINESS_SPEED 1.0
#endif






#if WATER_FRESNEL_ADDITION == -1
#undef WATER_FRESNEL_ADDITION
										#define WATER_FRESNEL_ADDITION 1
#endif
#if WATER_TRANSPARENCY == -1
#undef WATER_TRANSPARENCY
										#define WATER_TRANSPARENCY 0.2
#endif






#if ISOMETRIC_RENDERING_ENABLED == -1
#undef ISOMETRIC_RENDERING_ENABLED
										#define ISOMETRIC_RENDERING_ENABLED 0
#endif
#if ISOMETRIC_WORLD_SCALE == -1
#undef ISOMETRIC_WORLD_SCALE
										#define ISOMETRIC_WORLD_SCALE 32
#endif
#if ISOMETRIC_BACKWARD_VISIBILITY == -1
#undef ISOMETRIC_BACKWARD_VISIBILITY
										#define ISOMETRIC_BACKWARD_VISIBILITY 1
#endif
#if ISOMETRIC_FORWARD_VISIBILITY == -1
#undef ISOMETRIC_FORWARD_VISIBILITY
										#define ISOMETRIC_FORWARD_VISIBILITY 128
#endif












#if USE_BETTER_RAND == -1
#undef USE_BETTER_RAND
										#define USE_BETTER_RAND 0
#endif
#if SHOW_DANGEROUS_LIGHT == -1
#undef SHOW_DANGEROUS_LIGHT
										#define SHOW_DANGEROUS_LIGHT 0
#endif
#if USE_SIMPLE_LIGHT == -1
#undef USE_SIMPLE_LIGHT
										#define USE_SIMPLE_LIGHT 0
#endif
#if SSAO_SHOW_AMOUNT == -1
#undef SSAO_SHOW_AMOUNT
										#define SSAO_SHOW_AMOUNT 0
#endif
#if BLOOM_SHOW_ADDITION == -1
#undef BLOOM_SHOW_ADDITION
										#define BLOOM_SHOW_ADDITION 0
#endif
#if BLOOM_SHOW_FILTERED_TEXTURE == -1
#undef BLOOM_SHOW_FILTERED_TEXTURE
										#define BLOOM_SHOW_FILTERED_TEXTURE 0
#endif
#if SUNRAYS_SHOW_ADDITION == -1
#undef SUNRAYS_SHOW_ADDITION
										#define SUNRAYS_SHOW_ADDITION 0
#endif
#if DOF_SHOW_AMOUNTS == -1
#undef DOF_SHOW_AMOUNTS
										#define DOF_SHOW_AMOUNTS 0
#endif
#if REFLECTIVE_EVERYTHING == -1
#undef REFLECTIVE_EVERYTHING
										#define REFLECTIVE_EVERYTHING 0
#endif
#endif





// post-processed definitions



#ifdef NETHER
	#undef SHADOWS_ENABLED
	#undef SUNRAYS_ENABLED
#endif

#ifdef END
	#undef SHADOWS_ENABLED
#endif



#define BLOCK_COLOR vec3(BLOCK_RED, BLOCK_GREEN, BLOCK_BLUE)*BLOCK_BRIGHTNESS

#define CAVE_AMBIENT_COLOR vec3(CAVE_AMBIENT_RED, CAVE_AMBIENT_GREEN, CAVE_AMBIENT_BLUE)*CAVE_AMBIENT_BRIGHTNESS



#define SKYLIGHT_DAY_COLOR vec3(SKYLIGHT_DAY_RED, SKYLIGHT_DAY_GREEN, SKYLIGHT_DAY_BLUE)*SKYLIGHT_DAY_BRIGHTNESS
#define AMBIENT_DAY_COLOR vec3(AMBIENT_DAY_RED, AMBIENT_DAY_GREEN, AMBIENT_DAY_BLUE)*AMBIENT_DAY_BRIGHTNESS

#define SKYLIGHT_NIGHT_COLOR vec3(SKYLIGHT_NIGHT_RED, SKYLIGHT_NIGHT_GREEN, SKYLIGHT_NIGHT_BLUE)*SKYLIGHT_NIGHT_BRIGHTNESS
#define AMBIENT_NIGHT_COLOR vec3(AMBIENT_NIGHT_RED, AMBIENT_NIGHT_GREEN, AMBIENT_NIGHT_BLUE)*AMBIENT_NIGHT_BRIGHTNESS

#define SKYLIGHT_SUNRISE_COLOR vec3(SKYLIGHT_SUNRISE_RED, SKYLIGHT_SUNRISE_GREEN, SKYLIGHT_SUNRISE_BLUE)*SKYLIGHT_SUNRISE_BRIGHTNESS
#define AMBIENT_SUNRISE_COLOR vec3(AMBIENT_SUNRISE_RED, AMBIENT_SUNRISE_GREEN, AMBIENT_SUNRISE_BLUE)*AMBIENT_SUNRISE_BRIGHTNESS

#define SKYLIGHT_SUNSET_COLOR vec3(SKYLIGHT_SUNSET_RED, SKYLIGHT_SUNSET_GREEN, SKYLIGHT_SUNSET_BLUE)*SKYLIGHT_SUNSET_BRIGHTNESS
#define AMBIENT_SUNSET_COLOR vec3(AMBIENT_SUNSET_RED, AMBIENT_SUNSET_GREEN, AMBIENT_SUNSET_BLUE)*AMBIENT_SUNSET_BRIGHTNESS



#define WATER_REFLECTION_CONSTANT (WATER_REFLECTION_AMOUNT * (1.0 - WATER_REFLECTION_FRESNEL))
#define WATER_REFLECTION_VARIABLE (WATER_REFLECTION_AMOUNT * WATER_REFLECTION_FRESNEL)
#define WATER_REFLECTION_STRENGTHS vec2(WATER_REFLECTION_CONSTANT, WATER_REFLECTION_VARIABLE)

#define RAIN_REFLECTION_CONSTANT (RAIN_REFLECTION_AMOUNT * (1.0 - RAIN_REFLECTION_FRESNEL))
#define RAIN_REFLECTION_VARIABLE (RAIN_REFLECTION_AMOUNT * RAIN_REFLECTION_FRESNEL)
#define RAIN_REFLECTION_STRENGTHS vec2(RAIN_REFLECTION_CONSTANT, RAIN_REFLECTION_VARIABLE)



#define SUNRAYS_SUN_COLOR vec3(SUNRAYS_SUN_RED, SUNRAYS_SUN_GREEN, SUNRAYS_SUN_BLUE)
#define SUNRAYS_MOON_COLOR vec3(SUNRAYS_MOON_RED, SUNRAYS_MOON_GREEN, SUNRAYS_MOON_BLUE)



#define CONTRAST_DETECT_COLOR vec3(CONTRAST_DETECT_RED, CONTRAST_DETECT_GREEN, CONTRAST_DETECT_BLUE)



#if WATER_REFLECTIONS_ENABLED == 1
	#define REFLECTIONS_ENABLED
#endif
#if RAIN_REFLECTIONS_ENABLED == 1
	#define REFLECTIONS_ENABLED
#endif



#if SSAO_SHOW_AMOUNT == 1
	#define DEBUG_OUTPUT_ENABLED
#endif
#if BLOOM_SHOW_ADDITION == 1
	#define DEBUG_OUTPUT_ENABLED
#endif
#if BLOOM_SHOW_FILTERED_TEXTURE == 1
	#define DEBUG_OUTPUT_ENABLED
#endif
#if SUNRAYS_SHOW_ADDITION == 1
	#define DEBUG_OUTPUT_ENABLED
#endif
#if DOF_SHOW_AMOUNTS == 1
	#define DEBUG_OUTPUT_ENABLED
#endif





// Hidden settings

#define LIGHT_SMOOTHING 0.1

const float SHADOW_OFFSET_INCREASE = 1.3 / shadowMapResolution;
const float SHADOW_OFFSET_MIN = 1.1 / pow(shadowMapResolution, 0.95);
const float PI = 3.1415926538;
const float HALF_PI = PI / 2.0;

#ifdef FSH
	ivec2 texelcoord = ivec2(gl_FragCoord.xy);
#endif

layout(binding = 0) uniform sampler2D texture;
layout(binding = 1) uniform sampler2D lightmap;
layout(binding = 2) uniform sampler2D colortex0;
layout(binding = 3) uniform sampler2D colortex1;
layout(binding = 4) uniform sampler2D colortex2;
layout(binding = 5) uniform sampler2D colortex3;
layout(binding = 6) uniform sampler2D colortex4;
layout(binding = 7) uniform sampler2D gaux2;
layout(binding = 8) uniform sampler2D depthtex0;
layout(binding = 9) uniform sampler2D depthtex1;
layout(binding = 10) uniform sampler2D depthtex2;
layout(binding = 11) uniform sampler2D shadowtex0;
//uniform sampler2D noisetex;

//uniform float centerDepth;
//uniform float centerDepthSmooth;



// misc defines

#ifdef FSH
	#define flat_inout flat in
#else
	#define flat_inout flat out
#endif

#define HAND_DEPTH 0.19 // idk what should actually be here

#ifdef DEBUG_OUTPUT_ENABLED
	#define DEBUG_ARGS_IN , debugOutput
	#define DEBUG_ARGS_OUT , inout vec3 debugOutput
#else
	#define DEBUG_ARGS_IN
	#define DEBUG_ARGS_OUT
#endif



// buffer values:

#define MAIN_BUFFER                 colortex0
#define TAA_PREV_BUFFER             colortex1
#define BLOOM_BUFFER                colortex2
#define REFLECTION_STRENGTH_BUFFER  colortex3
#define NOISY_ADDITIONS_BUFFER      colortex3
#define NORMALS_BUFFER              colortex4
#define MAIN_BUFFER_COPY            gaux2
#define DEBUG_BUFFER                colortex0

#define DEPTH_BUFFER_ALL                   depthtex0
#define DEPTH_BUFFER_WO_TRANS              depthtex1
#define DEPTH_BUFFER_WO_TRANS_OR_HANDHELD  depthtex2





float pow2(float v) {
	return v * v;
}
float pow3(float v) {
	return v * v * v;
}
float pow4(float v) {
	float v2 = v * v;
	return v2 * v2;
}
float pow5(float v) {
	float v2 = v * v;
	return v2 * v2 * v;
}
float pow10(float v) {
	float v2 = v * v;
	float v4 = v2 * v2;
	return v4 * v4 * v2;
}

vec2 pow2(vec2 v) {
	return v * v;
}
vec2 pow3(vec2 v) {
	return v * v * v;
}

vec3 pow2(vec3 v) {
	return v * v;
}
vec3 pow3(vec3 v) {
	return v * v * v;
}

float getColorLum(vec3 color) {
	return dot(color, vec3(0.2125, 0.7154, 0.0721));
}

float maxAbs(vec2 v) {
	float r = abs(v.r);
	float g = abs(v.g);
	return max(r, g);
}

float maxAbs(vec3 v) {
	float r = abs(v.r);
	float g = abs(v.g);
	float b = abs(v.b);
	return max(max(r, g), b);
}

float percentThroughClamped(float value, float low, float high) {
	float percentThrough = (value - low) / (high - low);
	return clamp(percentThrough, 0.0, 1.0);
}

// all these smooth functions seem the same for speed

//// from: https://iquilezles.org/articles/smin/
//vec3 smoothMin(vec3 a, vec3 b, float k) {
//	vec3 h = max(k-abs(a-b), 0.0)/k;
//	return min(a, b) - h*h*k*0.25;
//}

//// same as smoothMin but w/ in&out inverted
//vec3 smoothMax(vec3 a, vec3 b, float k) {
//	vec3 h = max(k-abs(a-b), 0.0)/k;
//	return max(a, b) + h*h*k*0.25;
//}

//// from: https://www.shadertoy.com/view/Ml3Gz8
//vec3 smoothMin(vec3 a, vec3 b, float k) {
//	vec3 h = clamp(0.5 + 0.5*(a-b)/k, 0.0, 1.0);
//	return mix(a, b, h) - k*h*(1.0-h);
//}

//// same as smoothMin but w/ in&out inverted
//vec3 smoothMax(vec3 a, vec3 b, float k) {
//	vec3 h = clamp(0.5 + 0.5*(b-a)/k, 0.0, 1.0);
//	return mix(a, b, h) + k*h*(1.0-h);
//}

vec3 smoothMin(vec3 v1, vec3 v2, float a) {
	float v1Lum = getColorLum(v1);
	float v2Lum = getColorLum(v2);
	return (v1 + v2 - sqrt((v1 - v2) * (v1 - v2) + a * (v1Lum + v2Lum) / 2.0)) / 2.0;
}

vec3 smoothMax(vec3 v1, vec3 v2, float a) {
	float v1Lum = getColorLum(v1);
	float v2Lum = getColorLum(v2);
	return (v1 + v2 + sqrt((v1 - v2) * (v1 - v2) + a * (v1Lum + v2Lum) / 2.0)) / 2.0;
}

vec3 smoothClamp(vec3 v, vec3 minV, vec3 maxV, float a) {
	return smoothMax(smoothMin(v, maxV, a), minV, a);
}

float cosineInterpolate(float edge1, float edge2, float value) {
	float value2 = (1.0 - cos(value * PI)) / 2.0;
	return edge1 * (1.0 - value2) + edge2 * value2;
}

float cubicInterpolate(float edge0, float edge1, float edge2, float edge3, float value) {
	float value2 = value * value;
	float a0 = edge3 - edge2 - edge0 + edge1;
	float a1 = edge0 - edge1 - a0;
	float a2 = edge2 - edge0;
	float a3 = edge1;
	return(a0 * value * value2 + a1 * value2 + a2 * value + a3);
}

vec3 cubicInterpolate(vec3 edge0, vec3 edge1, vec3 edge2, vec3 edge3, float value) {
	float x = cubicInterpolate(edge0.x, edge1.x, edge2.x, edge3.x, value);
	float y = cubicInterpolate(edge0.y, edge1.y, edge2.y, edge3.y, value);
	float z = cubicInterpolate(edge0.z, edge1.z, edge2.z, edge3.z, value);
	return vec3(x, y, z);
}



vec4 startMat(vec3 pos) {
	return vec4(pos.xyz, 1.0);
}
vec3 endMat(vec4 pos) {
	return pos.xyz / pos.w;
}

bool depthIsSky(float depth) {
	return depth > 0.99;
}
bool depthIsHand(float depth) {
	return depth < 0.003;
}

// never underestimate trial and error
#ifdef FSH
	float estimateDepthFSH(vec2 texcoord, float linearDepth) {
		float len = length(texcoord * 2.0 - 1.0);
		return linearDepth + len * len / 8.0;
	}
#else
	float estimateDepthVSH() {
		float len = length(gl_Position.xy) / max(gl_Position.w, 1.0);
		return gl_Position.z * (1.0 + len * len * 0.7);
	}
#endif

void adjustLmcoord(inout vec2 lmcoord) {
	const float low = 0.0333;
	const float high = 0.95;
	lmcoord -= low;
	lmcoord /= high - low;
	lmcoord = clamp(lmcoord, 0.0, 1.0);
}

vec3 getSkyLight(vec4 skylightPercents) {
	vec3 output = 
		skylightPercents.x * SKYLIGHT_DAY_COLOR +
		skylightPercents.y * SKYLIGHT_NIGHT_COLOR +
		skylightPercents.z * SKYLIGHT_SUNRISE_COLOR +
		skylightPercents.w * SKYLIGHT_SUNSET_COLOR;
	return output / 2.0;
}

vec3 getAmbientLight(vec4 skylightPercents, float ambientBrightness) {
	vec3 ambient = 
		skylightPercents.x * AMBIENT_DAY_COLOR +
		skylightPercents.y * AMBIENT_NIGHT_COLOR +
		skylightPercents.z * AMBIENT_SUNRISE_COLOR +
		skylightPercents.w * AMBIENT_SUNSET_COLOR;
	return mix(CAVE_AMBIENT_COLOR, ambient, ambientBrightness);
}



#ifdef USE_BETTER_RAND
	// taken from: https://www.reedbeta.com/blog/hash-functions-for-gpu-rendering/
	float randomFloat(inout uint rng) {
		rng = rng * 747796405u + 2891336453u;
		uint v = ((rng >> ((rng >> 28u) + 4u)) ^ rng) * 277803737u;
		v = (v >> 22u) ^ v;
		//float f = float(v % 1000000u);
		//return f / 500000.0 - 1.0;
		const uint BIT_MASK = (2u << 16u) - 1u;
		float normalizedValue = float(v & BIT_MASK) / float(BIT_MASK);
		return normalizedValue * 2.0 - 1.0;
	}
	/*
	// maybe switch to this:
	// taken from: https://www.pcg-random.org/download.html
	uint32_t pcg32_random_r(pcg32_random_t* rng)
	{
		uint64_t oldstate = rng->state;
		rng->state = oldstate * 6364136223846793005ULL + rng->inc;
		uint32_t xorshifted = ((oldstate >> 18u) ^ oldstate) >> 27u;
		uint32_t rot = oldstate >> 59u;
		return (xorshifted >> rot) | (xorshifted << ((-rot) & 31));
	}
	*/
#else
	uint rotateRight(uint value, uint shift) {
		return (value >> shift) | (value << (32u - shift));
	}
	float randomFloat(inout uint rng) {
		rng = rng * 747796405u + 2891336453u;
		rng ^= rotateRight(rng, 11u);
		rng ^= rotateRight(rng, 17u);
		rng ^= rotateRight(rng, 23u);
		//float f = float(rng % 1000000u);
		//return f / 500000.0 - 1.0;
		const uint BIT_MASK = (2u << 16u) - 1u;
		float normalizedValue = float(rng & BIT_MASK) / float(BIT_MASK);
		return normalizedValue * 2.0 - 1.0;
	}
#endif

vec2 randomVec2(inout uint rng) {
	float x = randomFloat(rng);
	float y = randomFloat(rng);
	return vec2(x, y);
}

vec3 randomVec3(inout uint rng) {
	float x = randomFloat(rng);
	float y = randomFloat(rng);
	float z = randomFloat(rng);
	return vec3(x, y, z);
}

vec3 randomVec3FromRValue(uint rng) {
	return randomVec3(rng);
}

float normalizeNoiseAround1(float noise, float range) {
	return noise * range + 1.0;
}

vec2 normalizeNoiseAround1(vec2 noise, float range) {
	float x = normalizeNoiseAround1(noise.x, range);
	float y = normalizeNoiseAround1(noise.y, range);
	return vec2(x, y);
}

vec3 normalizeNoiseAround1(vec3 noise, float range) {
	float x = normalizeNoiseAround1(noise.x, range);
	float y = normalizeNoiseAround1(noise.y, range);
	float z = normalizeNoiseAround1(noise.z, range);
	return vec3(x, y, z);
}



float cubeLength(vec2 v) {
	return pow(abs(v.x * v.x * v.x) + abs(v.y * v.y * v.y), 1.0 / 3.0);
}

float getDistortFactor(vec3 v) {
	return cubeLength(v.xy) + SHADOW_DISTORT_ADDITION;
}

vec3 distort(vec3 v, float distortFactor) {
	return vec3(v.xy / distortFactor, v.z * 0.5);
}

vec3 distort(vec3 v) {
	return distort(v, getDistortFactor(v));
}



#define FIRST_PASS
#define ARGS_IN , false
#define ARGS_OUT , bool dummy
#define ARG_IN false
#define ARG_OUT bool dummy
#define main dummy_main
// transfers

#ifdef FIRST_PASS
	
	varying vec2 texcoord;
	varying vec2 lmcoord;
	varying vec3 glcolor;
	varying vec3 normal;
	
	#if RAIN_REFLECTIONS_ENABLED == 1
		varying vec3 worldPos;
		varying float baseRainReflectionStrength;
	#endif
	#if SHOW_DANGEROUS_LIGHT == 1
		varying float isDangerousLight;
	#endif
	
#endif

// includes

#ifdef VSH

void doPreLighting(ARG_OUT) {
	
	#if HANDHELD_LIGHT_ENABLED == 1
		float depth = estimateDepthVSH();
		if (depth <= HANDHELD_LIGHT_DISTANCE) {
			float handLightBrightness = max(1.0 - depth / HANDHELD_LIGHT_DISTANCE, 0.0);

#define import_heldBlockLightValue
#ifdef FIRST_PASS
int heldBlockLightValue = 0;
#endif
			handLightBrightness *= heldBlockLightValue / 15.0 * HANDHELD_LIGHT_BRIGHTNESS;
			lmcoord.x = max(lmcoord.x, handLightBrightness);
		}
	#endif
	
	vec3 shadingNormals = vec3(abs(gl_Normal.x), gl_Normal.y, abs(gl_Normal.z));
	float sideShading = dot(shadingNormals, vec3(-0.3, 0.5, 0.3));
	sideShading = sideShading * SIDE_SHADING * 0.5 + 1.0;
	lmcoord *= sideShading;
	
}

#endif
#ifdef FSH



#undef INCLUDE_GET_AMBIENT_LIGHT

#if defined FIRST_PASS && !defined GET_AMBIENT_LIGHT_FIRST_FINISHED
	#define INCLUDE_GET_AMBIENT_LIGHT
	#define GET_AMBIENT_LIGHT_FIRST_FINISHED
#endif
#if defined SECOND_PASS && !defined GET_AMBIENT_LIGHT_SECOND_FINISHED
	#define INCLUDE_GET_AMBIENT_LIGHT
	#define GET_AMBIENT_LIGHT_SECOND_FINISHED
#endif



#ifdef INCLUDE_GET_AMBIENT_LIGHT



vec3 getAmbientLight(ARG_OUT) {
	

#define import_ambientSunPercent
#ifdef FIRST_PASS
float ambientSunPercent = 0.0;
#endif

#define import_ambientMoonPercent
#ifdef FIRST_PASS
float ambientMoonPercent = 0.0;
#endif

#define import_ambientSunrisePercent
#ifdef FIRST_PASS
float ambientSunrisePercent = 0.0;
#endif

#define import_ambientSunsetPercent
#ifdef FIRST_PASS
float ambientSunsetPercent = 0.0;
#endif
	
	vec3 ambientSunLight     = AMBIENT_DAY_COLOR     * ambientSunPercent;
	vec3 ambientMoonLight    = AMBIENT_NIGHT_COLOR   * ambientMoonPercent;
	vec3 ambientSunriseLight = AMBIENT_SUNRISE_COLOR * ambientSunrisePercent;
	vec3 ambientSunsetLight  = AMBIENT_SUNSET_COLOR  * ambientSunsetPercent;
	

#define import_rainStrength
#ifdef FIRST_PASS
float rainStrength = 0.0;
#endif
	float lightMult = 1.0 - rainStrength * (1.0 - RAIN_LIGHT_MULT);
	
	return
		ambientSunLight * lightMult
		+ ambientMoonLight
		+ ambientSunriseLight * lightMult
		+ ambientSunsetLight * lightMult;
}



#endif



vec3 getBasicLighting(float blockBrightness, float ambientBrightness  ARGS_OUT) {
	// cel shading experiments
	//blockBrightness = round(blockBrightness * 5) / 5;
	//skyBrightness = round(skyBrightness * 5) / 5;
	//ambientBrightness = round(ambientBrightness * 5) / 5;
	
	vec3 ambientLight = getAmbientLight(ARG_IN);
	ambientLight = mix(CAVE_AMBIENT_COLOR, ambientLight, ambientBrightness);
	
	#if BLOCKLIGHT_FLICKERING_ENABLED == 1

#define import_blockFlickerAmount
#ifdef FIRST_PASS
float blockFlickerAmount = 0.0;
#endif
		blockBrightness *= blockFlickerAmount;
	#endif
	#if BLOCK_BRIGHTNESS_CURVE == 2
		blockBrightness = pow2(blockBrightness);
	#elif BLOCK_BRIGHTNESS_CURVE == 3
		blockBrightness = pow3(blockBrightness);
	#elif BLOCK_BRIGHTNESS_CURVE == 4
		blockBrightness = pow4(blockBrightness);
	#elif BLOCK_BRIGHTNESS_CURVE == 5
		blockBrightness = pow5(blockBrightness);
	#endif
	vec3 blockLight = blockBrightness * BLOCK_COLOR;
	
	vec3 total = smoothMax(blockLight, ambientLight, LIGHT_SMOOTHING);
	return total;
}



#endif





#ifdef FSH

#if RAIN_REFLECTIONS_ENABLED == 1
//-----------------------------//
//        SIMPLEX NOISE        //
//-----------------------------//

// This code was taken from here: https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83



#ifdef FIRST_PASS

vec4 grad4(float j, vec4 ip) {
	const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);
	vec4 p,s;
	
	p.xyz = floor(fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;
	p.w = 1.5 - dot(abs(p.xyz), ones.xyz);
	s = vec4(lessThan(p, vec4(0.0)));
	p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;
	
	return p;
}

float mod289(const float x) {return x - floor(x * (1.0 / 289.0)) * 289.0;}
vec4 mod289(const vec4 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;}

float permute(const float x) {return mod289(((x * 34.0) + 1.0) * x);}
vec4 permute(const vec4 x) {return mod289(((x * 34.0) + 1.0) * x);}

float taylorInvSqrt(float r) {return 1.79284291400159 - 0.85373472095314 * r;}
vec4 taylorInvSqrt(vec4 r) {return 1.79284291400159 - 0.85373472095314 * r;}

float simplexNoise(vec3 v){ 
	const vec2 C = vec2(1.0/6.0, 1.0/3.0);
	const vec4 D = vec4(0.0, 0.5, 1.0, 2.0);
	
	// first corner
	vec3 i = floor(v + dot(v, C.yyy));
	vec3 x0 = v - i + dot(i, C.xxx);
	
	// other corners
	vec3 g = step(x0.yzx, x0.xyz);
	vec3 l = 1.0 - g;
	vec3 i1 = min(g.xyz, l.zxy);
	vec3 i2 = max(g.xyz, l.zxy);
	
	// x0 = x0 - 0. + 0.0 * C 
	vec3 x1 = x0 - i1 + 1.0 * C.xxx;
	vec3 x2 = x0 - i2 + 2.0 * C.xxx;
	vec3 x3 = x0 - 1. + 3.0 * C.xxx;
	
	// permutations
	i = mod(i, 289.0); 
	vec4 p = permute(
		permute(
			permute(i.z + vec4(0.0, i1.z, i2.z, 1.0))
			+ i.y + vec4(0.0, i1.y, i2.y, 1.0)
		) 
		+ i.x + vec4(0.0, i1.x, i2.x, 1.0)
	);
	
	// gradients
	// (N*N points uniformly over a square, mapped onto an octahedron.)
	float n_ = 1.0/7.0; // N=7
	vec3 ns = n_ * D.wyz - D.xzx;
	
	vec4 j = p - 49.0 * floor(p * ns.z * ns.z); // mod(p,N*N)
	
	vec4 x_ = floor(j * ns.z);
	vec4 y_ = floor(j - 7.0 * x_); // mod(j,N)
	
	vec4 x = x_ *ns.x + ns.yyyy;
	vec4 y = y_ *ns.x + ns.yyyy;
	vec4 h = 1.0 - abs(x) - abs(y);
	
	vec4 b0 = vec4(x.xy, y.xy);
	vec4 b1 = vec4(x.zw, y.zw);
	
	vec4 s0 = floor(b0)*2.0 + 1.0;
	vec4 s1 = floor(b1)*2.0 + 1.0;
	vec4 sh = -step(h, vec4(0.0));
	
	vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy;
	vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww;
	
	vec3 p0 = vec3(a0.xy,h.x);
	vec3 p1 = vec3(a0.zw,h.y);
	vec3 p2 = vec3(a1.xy,h.z);
	vec3 p3 = vec3(a1.zw,h.w);
	
	// normalise gradients
	vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));
	p0 *= norm.x;
	p1 *= norm.y;
	p2 *= norm.z;
	p3 *= norm.w;
	
	// mix final noise value
	vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);
	m = m * m;
	return 42.0 * dot(
		m*m,
		vec4(
			dot(p0,x0),
			dot(p1,x1),
			dot(p2,x2),
			dot(p3,x3)
		)
	);
}

float simplexNoise(vec4 v) {
	const vec4 C = vec4(
		0.138196601125011, // (5 - sqrt(5))/20 G4
		0.276393202250021, // 2 * G4
		0.414589803375032, // 3 * G4
		-0.447213595499958 // -1 + 4 * G4
	);
	
	// first corner
	vec4 i = floor(v + dot(v, vec4(.309016994374947451))); // (sqrt(5) - 1)/4
	vec4 x0 = v - i + dot(i, C.xxxx);
	
	// other corners
	
	// rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)
	vec4 i0;
	vec3 isX = step(x0.yzw, x0.xxx);
	vec3 isYZ = step(x0.zww, x0.yyz);
	// i0.x = dot(isX, vec3(1.0));
	i0.x = isX.x + isX.y + isX.z;
	i0.yzw = 1.0 - isX;
	// i0.y += dot(isYZ.xy, vec2(1.0));
	i0.y += isYZ.x + isYZ.y;
	i0.zw += 1.0 - isYZ.xy;
	i0.z += isYZ.z;
	i0.w += 1.0 - isYZ.z;
	
	// i0 now contains the unique values 0,1,2,3 in each channel
	vec4 i3 = clamp(i0, 0.0, 1.0);
	vec4 i2 = clamp(i0-1.0, 0.0, 1.0);
	vec4 i1 = clamp(i0-2.0, 0.0, 1.0);
	
	// x0 = x0 - 0.0 + 0.0 * C.xxxx
	// x1 = x0 - i1 + 1.0 * C.xxxx
	// x2 = x0 - i2 + 2.0 * C.xxxx
	// x3 = x0 - i3 + 3.0 * C.xxxx
	// x4 = x0 - 1.0 + 4.0 * C.xxxx
	vec4 x1 = x0 - i1 + C.xxxx;
	vec4 x2 = x0 - i2 + C.yyyy;
	vec4 x3 = x0 - i3 + C.zzzz;
	vec4 x4 = x0 + C.wwww;
	
	// permutations
	i = mod289(i);
	float j0 = permute(permute(permute(permute(i.w) + i.z) + i.y) + i.x);
	vec4 j1 = permute(
		permute(
			permute(
				permute(i.w + vec4(i1.w, i2.w, i3.w, 1.0))
				+ i.z + vec4(i1.z, i2.z, i3.z, 1.0)
			)
			+ i.y + vec4(i1.y, i2.y, i3.y, 1.0)
		)
		+ i.x + vec4(i1.x, i2.x, i3.x, 1.0)
	);
	
	// gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope
	// 7*7*6 = 294, which is close to the ring size 17*17 = 289.
	vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0);
	
	vec4 p0 = grad4(j0, ip);
	vec4 p1 = grad4(j1.x, ip);
	vec4 p2 = grad4(j1.y, ip);
	vec4 p3 = grad4(j1.z, ip);
	vec4 p4 = grad4(j1.w, ip);
	
	// normalise gradients
	vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));
	p0 *= norm.x;
	p1 *= norm.y;
	p2 *= norm.z;
	p3 *= norm.w;
	p4 *= taylorInvSqrt(dot(p4,p4));
	
	// mix contributions from the five corners
	vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);
	vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)), 0.0);
	m0 = m0 * m0;
	m1 = m1 * m1;
	return 49.0 * (
		dot(
			m0*m0,
			vec3(dot(p0, x0), dot(p1, x1), dot(p2, x2))
		)
		+ dot(
			m1*m1,
			vec2(dot(p3, x3), dot(p4, x4))
		)
	);
}

vec3 simplexNoise3From4(vec4 x){
	float s = simplexNoise(vec4(x));
	float s1 = simplexNoise(vec4(x.y - 19.1 * 10, x.z + 33.4 * 10, x.x + 47.2 * 10, x.w + 65.4 * 10));
	float s2 = simplexNoise(vec4(x.z + 74.2 * 10, x.x - 124.5 * 10, x.y + 99.4 * 10, x.w + 113.4 * 10));
	return vec3(s, s1, s2);
}

vec2 simplexNoise2From3(vec3 x){
	float s = simplexNoise(vec3(x));
	float s1 = simplexNoise(vec3(x.y - 19.1 * 10, x.z + 33.4 * 10, x.x + 47.2 * 10));
	return vec2(s, s1);
}

#endif
#endif

void main() {
	vec4 color = texture2D(MAIN_BUFFER, texcoord) * vec4(glcolor, 1.0);
	#ifdef DEBUG_OUTPUT_ENABLED
		vec4 debugOutput = vec4(0.0, 0.0, 0.0, color.a);
	#endif
	
	
	// bloom value
	#if BLOOM_ENABLED == 1
		vec4 colorForBloom = color;
	#endif
	
	
	// main lighting
	color.rgb *= getBasicLighting(lmcoord.x, lmcoord.y  ARGS_IN);
	
	#if BLOOM_ENABLED == 1
		#ifdef OVERWORLD

#define import_ambientMoonPercent
#ifdef FIRST_PASS
float ambientMoonPercent = 0.0;
#endif
			float blockLight = lmcoord.x;
			float skyLight = lmcoord.y * (1.0 - ambientMoonPercent);
			colorForBloom.rgb *= max(blockLight * blockLight * 1.05, skyLight * 0.75);
		#elif defined NETHER
			colorForBloom.rgb *= lmcoord.x;
			colorForBloom.rgb *= dot(colorForBloom.rgb, vec3(0.92, 0.35, 0.07)) * 1.3;
		#endif
	#endif
	
	
	// show dangerous light
	#if SHOW_DANGEROUS_LIGHT == 1
		if (isDangerousLight > 0.0) {
			color.rgb = mix(color.rgb, vec3(1.0, 0.0, 0.0), 0.6);
		}
	#endif
	
	
	// rain reflection strength
	#if RAIN_REFLECTIONS_ENABLED == 1

#define import_cameraPosition
#ifdef FIRST_PASS
vec3 cameraPosition = vec3(0.0);
#endif
		float rainReflectionStrength = baseRainReflectionStrength;
		float noise = simplexNoise((worldPos + cameraPosition) * 0.2);
		noise = clamp(RAIN_REFLECTION_SLOPE * (noise - (1.0 - RAIN_REFLECTION_COVERAGE)) + 1.0, RAIN_REFLECTION_MIN, 1.0);
		rainReflectionStrength *= noise;
		rainReflectionStrength *= lmcoord.y * lmcoord.y * lmcoord.y;
	#else
		float rainReflectionStrength = 0.0;
	#endif
	
	
	// outputs
	
	#ifdef DEBUG_OUTPUT_ENABLED
		color = debugOutput;
	#endif
	
	/* DRAWBUFFERS:04 */
	gl_FragData[0] = color;
	gl_FragData[1] = vec4(normal, 1.0);
	
	#if BLOOM_ENABLED == 1 && defined REFLECTIONS_ENABLED
		/* DRAWBUFFERS:0423 */
		gl_FragData[2] = colorForBloom;
		gl_FragData[3] = vec4(RAIN_REFLECTION_STRENGTHS * rainReflectionStrength, 0.0, 1.0);
	#endif
	
	#if BLOOM_ENABLED == 1 && !defined REFLECTIONS_ENABLED
		/* DRAWBUFFERS:042 */
		gl_FragData[2] = colorForBloom;
	#endif
	
	#if BLOOM_ENABLED == 0 && defined REFLECTIONS_ENABLED
		/* DRAWBUFFERS:043 */
		gl_FragData[2] = vec4(RAIN_REFLECTION_STRENGTHS * rainReflectionStrength, 0.0, 1.0);
	#endif
	
}

#endif





#ifdef VSH

#if WAVING_ENABLED == 1
#ifdef FIRST_PASS
	const float[4] wavingScales = float[4] (0.0, WAVING_AMOUNT_1, WAVING_AMOUNT_2, WAVING_AMOUNT_3);
	const vec3 windDirection = vec3(1.0, 0.1, 0.3); // another way to think of it: weights for timePos influence
#endif



vec3 getWavingAddition(vec3 position  ARGS_OUT) {

#define import_cameraPosition
#ifdef FIRST_PASS
vec3 cameraPosition = vec3(0.0);
#endif
	vec3 worldPos = position + cameraPosition;

#define import_frameTimeCounter
#ifdef FIRST_PASS
float frameTimeCounter = 0.0;
#endif
	float timePos = frameTimeCounter + dot(worldPos, windDirection) * WAVING_WORLD_SCALE * 0.5;
	timePos *= WAVING_SPEED * 1.75;
	uint timePosFloor = uint(int(timePos));
	vec3 pos1 = randomVec3FromRValue(timePosFloor);
	vec3 pos2 = randomVec3FromRValue(timePosFloor + 1u);
	vec3 pos3 = randomVec3FromRValue(timePosFloor + 2u);
	vec3 pos4 = randomVec3FromRValue(timePosFloor + 3u);
	vec3 output = cubicInterpolate(pos1, pos2, pos3, pos4, mod(timePos, 1.0)) * vec3(1.0, 0.2, 1.0) * 0.08;
	#if HEIGHT_BASED_WAVING_ENABLED == 1
		const float lowY = 16.0;
		const float lowMult = 0.0;
		const float highY = 224.0;
		const float highMult = 2.0;
		output *= clamp((worldPos.y - lowY) * (highMult - lowMult) / (highY - lowY) + lowMult, 0.0, 1.75);
	#endif
	return output;
}



void applyWaving(inout vec3 position  ARGS_OUT) {

#define import_mc_Entity
#ifdef FIRST_PASS
vec3 mc_Entity = vec3(0.0);
#endif
	int rawWavingData = int(mc_Entity.x);
	if (rawWavingData < 1000) return;
	int wavingData = rawWavingData % 1000;
	if (wavingData < 2 || wavingData > 7) return;
	float wavingScale = wavingScales[wavingData / 2];

#define import_mc_midTexCoord
#ifdef FIRST_PASS
vec2 mc_midTexCoord = vec2(0.0);
#endif
	if (wavingData % 2 == 0 && gl_MultiTexCoord0.y > mc_midTexCoord.y) return; // don't apply waving to base
	#if !defined SHADER_SHADOW
		wavingScale *= lmcoord.y * lmcoord.y;
	#endif

#define import_betterRainStrength
#ifdef FIRST_PASS
float betterRainStrength = 0.0;
#endif
	wavingScale *= 1.0 + betterRainStrength * (WAVING_RAIN_MULT - 1.0);

#define import_ambientMoonPercent
#ifdef FIRST_PASS
float ambientMoonPercent = 0.0;
#endif
	wavingScale *= 1.0 - ambientMoonPercent * (1.0 - WAVING_NIGHT_MULT);
	position += getWavingAddition(position  ARGS_IN) * wavingScale;
}
#endif
#if ISOMETRIC_RENDERING_ENABLED == 1
//------------------------------------//
//        ISOMETRIC PROJECTION        //
//------------------------------------//

// This code was originally taken from XorDev's Ortho Shaderpack
// Link: https://github.com/XorDev/Ortho-Shaderpack/tree/master



vec4 projectIsometric(vec3 worldPos  ARGS_OUT) {
	const float scale = ISOMETRIC_WORLD_SCALE * 0.5;
	const float forwardPlusBackward = ISOMETRIC_FORWARD_VISIBILITY * 0.5 + ISOMETRIC_BACKWARD_VISIBILITY * 0.5;
	const float forwardMinusBackward = ISOMETRIC_FORWARD_VISIBILITY * 0.5 - ISOMETRIC_BACKWARD_VISIBILITY * 0.5;
	vec4 scaleVec = vec4(scale * aspectRatio, scale, -forwardPlusBackward, 1);
	const vec4 offsetVec = vec4(0, 0, forwardMinusBackward / forwardPlusBackward, 0);

#define import_gbufferModelView
#ifdef FIRST_PASS
mat4 gbufferModelView = mat4(0.0);
#endif
	return (gbufferModelView * vec4(worldPos, 1.0)) / scaleVec - offsetVec;
}
#endif
#if TAA_ENABLED == 1
void doTaaJitter(inout vec2 pos  ARGS_OUT) {

#define import_taaOffset
#ifdef FIRST_PASS
vec2 taaOffset = vec2(0.0);
#endif
	#if ISOMETRIC_RENDERING_ENABLED == 1
		pos += taaOffset * 0.5;
	#else
		pos += taaOffset * gl_Position.w;
	#endif
}
#endif

void main() {
	texcoord = (gl_TextureMatrix[0] * gl_MultiTexCoord0).xy;
	lmcoord  = (gl_TextureMatrix[1] * gl_MultiTexCoord1).xy;
	adjustLmcoord(lmcoord);
	
	
	#if RAIN_REFLECTIONS_ENABLED == 0
		vec3 worldPos;
	#endif

#define import_gbufferModelViewInverse
#ifdef FIRST_PASS
mat4 gbufferModelViewInverse = mat4(0.0);
#endif
	worldPos = endMat(gbufferModelViewInverse * (gl_ModelViewMatrix * gl_Vertex));
	
	
	#if WAVING_ENABLED == 1
		applyWaving(worldPos  ARGS_IN);
	#endif
	
	
	#if ISOMETRIC_RENDERING_ENABLED == 1
		gl_Position = projectIsometric(worldPos  ARGS_IN);
	#else

#define import_gbufferModelView
#ifdef FIRST_PASS
mat4 gbufferModelView = mat4(0.0);
#endif
		gl_Position = gl_ProjectionMatrix * gbufferModelView * startMat(worldPos);
	#endif
	
	
	#if ISOMETRIC_RENDERING_ENABLED == 0
		if (gl_Position.z < -1.5) return; // simple but effective optimization
	#endif
	
	
	#if TAA_ENABLED == 1
		doTaaJitter(gl_Position.xy  ARGS_IN);
	#endif
	
	
	glcolor = gl_Color.rgb;
	#if USE_SIMPLE_LIGHT == 1
		if (glcolor.r == glcolor.g && glcolor.g == glcolor.b) {
			glcolor = vec3(1.0);
		}
	#endif
	
	
	normal = gl_NormalMatrix * gl_Normal;
	
	
	#if RAIN_REFLECTIONS_ENABLED == 1

#define import_upPosition
#ifdef FIRST_PASS
vec3 upPosition = vec3(0.0);
#endif

#define import_rainReflectionStrength
#ifdef FIRST_PASS
float rainReflectionStrength = 0.0;
#endif
		baseRainReflectionStrength = dot(normalize(upPosition), normal) * 0.5 + 0.5;
		baseRainReflectionStrength *= baseRainReflectionStrength;
		baseRainReflectionStrength *= baseRainReflectionStrength;
		baseRainReflectionStrength *= baseRainReflectionStrength;
		baseRainReflectionStrength *= rainReflectionStrength;
	#endif
	
	
	#if SHOW_DANGEROUS_LIGHT == 1
		isDangerousLight = float(
			lmcoord.x < 0.51
			&& dot(normal, normalize(upPosition)) > 0.9
		);
	#endif
	
	
	doPreLighting(ARG_IN);
	
}

#endif
#undef main
#undef FIRST_PASS
#undef ARGS_IN
#undef ARGS_OUT
#undef ARG_IN
#undef ARG_OUT


#ifdef import_cameraPosition
uniform vec3 cameraPosition;
#endif

#ifdef import_previousCameraPosition
uniform vec3 previousCameraPosition;
#endif

#ifdef import_shadowModelView
uniform mat4 shadowModelView;
#endif

#ifdef import_shadowProjection
uniform mat4 shadowProjection;
#endif

#ifdef import_sunPosition
uniform vec3 sunPosition;
#endif

#ifdef import_moonPosition
uniform vec3 moonPosition;
#endif

#ifdef import_shadowLightPosition
uniform vec3 shadowLightPosition;
#endif

#ifdef import_fogColor
uniform vec3 fogColor;
#endif

#ifdef import_skyColor
uniform vec3 skyColor;
#endif

#ifdef import_entityColor
uniform vec4 entityColor;
#endif

#ifdef import_viewHeight
uniform float viewHeight;
#endif

#ifdef import_viewWidth
uniform float viewWidth;
#endif

#ifdef import_frameCounter
uniform int frameCounter;
#endif

#ifdef import_frameTimeCounter
uniform float frameTimeCounter;
#endif

#ifdef import_aspectRatio
uniform float aspectRatio;
#endif

#ifdef import_frameTime
uniform float frameTime;
#endif

#ifdef import_near
uniform float near;
#endif

#ifdef import_far
uniform float far;
#endif

#ifdef import_worldTime
uniform int worldTime;
#endif

#ifdef import_eyeBrightness
uniform ivec2 eyeBrightness;
#endif

#ifdef import_eyeBrightnessSmooth
uniform ivec2 eyeBrightnessSmooth;
#endif

#ifdef import_eyeAltitude
uniform float eyeAltitude;
#endif

#ifdef import_isEyeInWater
uniform int isEyeInWater;
#endif

#ifdef import_upPosition
uniform vec3 upPosition;
#endif

#ifdef import_heldBlockLightValue
uniform int heldBlockLightValue;
#endif

#ifdef import_rainStrength
uniform float rainStrength;
#endif

#ifdef import_wetness
uniform float wetness;
#endif

#ifdef import_screenBrightness
uniform float screenBrightness;
#endif

#ifdef import_gbufferModelView
uniform mat4 gbufferModelView;
#endif

#ifdef import_gbufferModelViewInverse
uniform mat4 gbufferModelViewInverse;
#endif

#ifdef import_gbufferProjection
uniform mat4 gbufferProjection;
#endif

#ifdef import_gbufferProjectionInverse
uniform mat4 gbufferProjectionInverse;
#endif

#ifdef import_gbufferPreviousProjection
uniform mat4 gbufferPreviousProjection;
#endif

#ifdef import_gbufferPreviousModelView
uniform mat4 gbufferPreviousModelView;
#endif

#ifdef import_normalMatrix
uniform mat3 normalMatrix;
#endif

#ifdef import_farPlusNear
uniform float farPlusNear;
#endif

#ifdef import_farMinusNear
uniform float farMinusNear;
#endif

#ifdef import_twoTimesNear
uniform float twoTimesNear;
#endif

#ifdef import_twoTimesNearTimesFar
uniform float twoTimesNearTimesFar;
#endif

#ifdef import_viewSize
uniform vec2 viewSize;
#endif

#ifdef import_pixelSize
uniform vec2 pixelSize;
#endif

#ifdef import_frameMod8
uniform int frameMod8;
#endif

#ifdef import_velocity
uniform float velocity;
#endif

#ifdef import_sharpenVelocityFactor
uniform float sharpenVelocityFactor;
#endif

#ifdef import_betterRainStrength
uniform float betterRainStrength;
#endif

#ifdef import_horizonAltitudeAddend
uniform float horizonAltitudeAddend;
#endif

#ifdef import_isSun
uniform bool isSun;
#endif

#ifdef import_isOtherLightSource
uniform bool isOtherLightSource;
#endif

#ifdef import_centerDepthSmooth
uniform float centerDepthSmooth;
#endif

#ifdef import_centerLinearDepthSmooth
uniform float centerLinearDepthSmooth;
#endif

#ifdef import_taaOffset
uniform vec2 taaOffset;
#endif

#ifdef import_invAspectRatio
uniform float invAspectRatio;
#endif

#ifdef import_invFar
uniform float invFar;
#endif

#ifdef import_invViewSize
uniform vec2 invViewSize;
#endif

#ifdef import_invPixelSize
uniform vec2 invPixelSize;
#endif

#ifdef import_invFrameTime
uniform float invFrameTime;
#endif

#ifdef import_invFarMinusNear
uniform float invFarMinusNear;
#endif

#ifdef import_isDry
uniform float isDry;
#endif

#ifdef import_mc_Entity
attribute vec3 mc_Entity;
#endif

#ifdef import_mc_midTexCoord
attribute vec2 mc_midTexCoord;
#endif

#ifdef import_shadowModelViewInverse
uniform mat4 shadowModelViewInverse;
#endif

#ifdef import_shadowProjectionInverse
uniform mat4 shadowProjectionInverse;
#endif

#ifdef import_blockFlickerAmount
uniform float blockFlickerAmount;
#endif

#ifdef import_rainReflectionStrength
uniform float rainReflectionStrength;
#endif

#ifdef import_sunLightBrightness
uniform float sunLightBrightness;
#endif

#ifdef import_moonLightBrightness
uniform float moonLightBrightness;
#endif

#ifdef import_sunriseColorPercent
uniform float sunriseColorPercent;
#endif

#ifdef import_sunsetColorPercent
uniform float sunsetColorPercent;
#endif

#ifdef import_sunDayColorPercent
uniform float sunDayColorPercent;
#endif

#ifdef import_ambientSunPercent
uniform float ambientSunPercent;
#endif

#ifdef import_ambientMoonPercent
uniform float ambientMoonPercent;
#endif

#ifdef import_ambientSunrisePercent
uniform float ambientSunrisePercent;
#endif

#ifdef import_ambientSunsetPercent
uniform float ambientSunsetPercent;
#endif

#ifdef import_sunAngle
uniform float sunAngle;
#endif

#define SECOND_PASS
#define ARGS_IN
#define ARGS_OUT
#define ARG_IN
#define ARG_OUT
// transfers

#ifdef FIRST_PASS
	
	varying vec2 texcoord;
	varying vec2 lmcoord;
	varying vec3 glcolor;
	varying vec3 normal;
	
	#if RAIN_REFLECTIONS_ENABLED == 1
		varying vec3 worldPos;
		varying float baseRainReflectionStrength;
	#endif
	#if SHOW_DANGEROUS_LIGHT == 1
		varying float isDangerousLight;
	#endif
	
#endif

// includes

#ifdef VSH

void doPreLighting(ARG_OUT) {
	
	#if HANDHELD_LIGHT_ENABLED == 1
		float depth = estimateDepthVSH();
		if (depth <= HANDHELD_LIGHT_DISTANCE) {
			float handLightBrightness = max(1.0 - depth / HANDHELD_LIGHT_DISTANCE, 0.0);

#define import_heldBlockLightValue
#ifdef FIRST_PASS
int heldBlockLightValue = 0;
#endif
			handLightBrightness *= heldBlockLightValue / 15.0 * HANDHELD_LIGHT_BRIGHTNESS;
			lmcoord.x = max(lmcoord.x, handLightBrightness);
		}
	#endif
	
	vec3 shadingNormals = vec3(abs(gl_Normal.x), gl_Normal.y, abs(gl_Normal.z));
	float sideShading = dot(shadingNormals, vec3(-0.3, 0.5, 0.3));
	sideShading = sideShading * SIDE_SHADING * 0.5 + 1.0;
	lmcoord *= sideShading;
	
}

#endif
#ifdef FSH



#undef INCLUDE_GET_AMBIENT_LIGHT

#if defined FIRST_PASS && !defined GET_AMBIENT_LIGHT_FIRST_FINISHED
	#define INCLUDE_GET_AMBIENT_LIGHT
	#define GET_AMBIENT_LIGHT_FIRST_FINISHED
#endif
#if defined SECOND_PASS && !defined GET_AMBIENT_LIGHT_SECOND_FINISHED
	#define INCLUDE_GET_AMBIENT_LIGHT
	#define GET_AMBIENT_LIGHT_SECOND_FINISHED
#endif



#ifdef INCLUDE_GET_AMBIENT_LIGHT



vec3 getAmbientLight(ARG_OUT) {
	

#define import_ambientSunPercent
#ifdef FIRST_PASS
float ambientSunPercent = 0.0;
#endif

#define import_ambientMoonPercent
#ifdef FIRST_PASS
float ambientMoonPercent = 0.0;
#endif

#define import_ambientSunrisePercent
#ifdef FIRST_PASS
float ambientSunrisePercent = 0.0;
#endif

#define import_ambientSunsetPercent
#ifdef FIRST_PASS
float ambientSunsetPercent = 0.0;
#endif
	
	vec3 ambientSunLight     = AMBIENT_DAY_COLOR     * ambientSunPercent;
	vec3 ambientMoonLight    = AMBIENT_NIGHT_COLOR   * ambientMoonPercent;
	vec3 ambientSunriseLight = AMBIENT_SUNRISE_COLOR * ambientSunrisePercent;
	vec3 ambientSunsetLight  = AMBIENT_SUNSET_COLOR  * ambientSunsetPercent;
	

#define import_rainStrength
#ifdef FIRST_PASS
float rainStrength = 0.0;
#endif
	float lightMult = 1.0 - rainStrength * (1.0 - RAIN_LIGHT_MULT);
	
	return
		ambientSunLight * lightMult
		+ ambientMoonLight
		+ ambientSunriseLight * lightMult
		+ ambientSunsetLight * lightMult;
}



#endif



vec3 getBasicLighting(float blockBrightness, float ambientBrightness  ARGS_OUT) {
	// cel shading experiments
	//blockBrightness = round(blockBrightness * 5) / 5;
	//skyBrightness = round(skyBrightness * 5) / 5;
	//ambientBrightness = round(ambientBrightness * 5) / 5;
	
	vec3 ambientLight = getAmbientLight(ARG_IN);
	ambientLight = mix(CAVE_AMBIENT_COLOR, ambientLight, ambientBrightness);
	
	#if BLOCKLIGHT_FLICKERING_ENABLED == 1

#define import_blockFlickerAmount
#ifdef FIRST_PASS
float blockFlickerAmount = 0.0;
#endif
		blockBrightness *= blockFlickerAmount;
	#endif
	#if BLOCK_BRIGHTNESS_CURVE == 2
		blockBrightness = pow2(blockBrightness);
	#elif BLOCK_BRIGHTNESS_CURVE == 3
		blockBrightness = pow3(blockBrightness);
	#elif BLOCK_BRIGHTNESS_CURVE == 4
		blockBrightness = pow4(blockBrightness);
	#elif BLOCK_BRIGHTNESS_CURVE == 5
		blockBrightness = pow5(blockBrightness);
	#endif
	vec3 blockLight = blockBrightness * BLOCK_COLOR;
	
	vec3 total = smoothMax(blockLight, ambientLight, LIGHT_SMOOTHING);
	return total;
}



#endif





#ifdef FSH

#if RAIN_REFLECTIONS_ENABLED == 1
//-----------------------------//
//        SIMPLEX NOISE        //
//-----------------------------//

// This code was taken from here: https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83



#ifdef FIRST_PASS

vec4 grad4(float j, vec4 ip) {
	const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);
	vec4 p,s;
	
	p.xyz = floor(fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;
	p.w = 1.5 - dot(abs(p.xyz), ones.xyz);
	s = vec4(lessThan(p, vec4(0.0)));
	p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;
	
	return p;
}

float mod289(const float x) {return x - floor(x * (1.0 / 289.0)) * 289.0;}
vec4 mod289(const vec4 x) {return x - floor(x * (1.0 / 289.0)) * 289.0;}

float permute(const float x) {return mod289(((x * 34.0) + 1.0) * x);}
vec4 permute(const vec4 x) {return mod289(((x * 34.0) + 1.0) * x);}

float taylorInvSqrt(float r) {return 1.79284291400159 - 0.85373472095314 * r;}
vec4 taylorInvSqrt(vec4 r) {return 1.79284291400159 - 0.85373472095314 * r;}

float simplexNoise(vec3 v){ 
	const vec2 C = vec2(1.0/6.0, 1.0/3.0);
	const vec4 D = vec4(0.0, 0.5, 1.0, 2.0);
	
	// first corner
	vec3 i = floor(v + dot(v, C.yyy));
	vec3 x0 = v - i + dot(i, C.xxx);
	
	// other corners
	vec3 g = step(x0.yzx, x0.xyz);
	vec3 l = 1.0 - g;
	vec3 i1 = min(g.xyz, l.zxy);
	vec3 i2 = max(g.xyz, l.zxy);
	
	// x0 = x0 - 0. + 0.0 * C 
	vec3 x1 = x0 - i1 + 1.0 * C.xxx;
	vec3 x2 = x0 - i2 + 2.0 * C.xxx;
	vec3 x3 = x0 - 1. + 3.0 * C.xxx;
	
	// permutations
	i = mod(i, 289.0); 
	vec4 p = permute(
		permute(
			permute(i.z + vec4(0.0, i1.z, i2.z, 1.0))
			+ i.y + vec4(0.0, i1.y, i2.y, 1.0)
		) 
		+ i.x + vec4(0.0, i1.x, i2.x, 1.0)
	);
	
	// gradients
	// (N*N points uniformly over a square, mapped onto an octahedron.)
	float n_ = 1.0/7.0; // N=7
	vec3 ns = n_ * D.wyz - D.xzx;
	
	vec4 j = p - 49.0 * floor(p * ns.z * ns.z); // mod(p,N*N)
	
	vec4 x_ = floor(j * ns.z);
	vec4 y_ = floor(j - 7.0 * x_); // mod(j,N)
	
	vec4 x = x_ *ns.x + ns.yyyy;
	vec4 y = y_ *ns.x + ns.yyyy;
	vec4 h = 1.0 - abs(x) - abs(y);
	
	vec4 b0 = vec4(x.xy, y.xy);
	vec4 b1 = vec4(x.zw, y.zw);
	
	vec4 s0 = floor(b0)*2.0 + 1.0;
	vec4 s1 = floor(b1)*2.0 + 1.0;
	vec4 sh = -step(h, vec4(0.0));
	
	vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy;
	vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww;
	
	vec3 p0 = vec3(a0.xy,h.x);
	vec3 p1 = vec3(a0.zw,h.y);
	vec3 p2 = vec3(a1.xy,h.z);
	vec3 p3 = vec3(a1.zw,h.w);
	
	// normalise gradients
	vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));
	p0 *= norm.x;
	p1 *= norm.y;
	p2 *= norm.z;
	p3 *= norm.w;
	
	// mix final noise value
	vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);
	m = m * m;
	return 42.0 * dot(
		m*m,
		vec4(
			dot(p0,x0),
			dot(p1,x1),
			dot(p2,x2),
			dot(p3,x3)
		)
	);
}

float simplexNoise(vec4 v) {
	const vec4 C = vec4(
		0.138196601125011, // (5 - sqrt(5))/20 G4
		0.276393202250021, // 2 * G4
		0.414589803375032, // 3 * G4
		-0.447213595499958 // -1 + 4 * G4
	);
	
	// first corner
	vec4 i = floor(v + dot(v, vec4(.309016994374947451))); // (sqrt(5) - 1)/4
	vec4 x0 = v - i + dot(i, C.xxxx);
	
	// other corners
	
	// rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)
	vec4 i0;
	vec3 isX = step(x0.yzw, x0.xxx);
	vec3 isYZ = step(x0.zww, x0.yyz);
	// i0.x = dot(isX, vec3(1.0));
	i0.x = isX.x + isX.y + isX.z;
	i0.yzw = 1.0 - isX;
	// i0.y += dot(isYZ.xy, vec2(1.0));
	i0.y += isYZ.x + isYZ.y;
	i0.zw += 1.0 - isYZ.xy;
	i0.z += isYZ.z;
	i0.w += 1.0 - isYZ.z;
	
	// i0 now contains the unique values 0,1,2,3 in each channel
	vec4 i3 = clamp(i0, 0.0, 1.0);
	vec4 i2 = clamp(i0-1.0, 0.0, 1.0);
	vec4 i1 = clamp(i0-2.0, 0.0, 1.0);
	
	// x0 = x0 - 0.0 + 0.0 * C.xxxx
	// x1 = x0 - i1 + 1.0 * C.xxxx
	// x2 = x0 - i2 + 2.0 * C.xxxx
	// x3 = x0 - i3 + 3.0 * C.xxxx
	// x4 = x0 - 1.0 + 4.0 * C.xxxx
	vec4 x1 = x0 - i1 + C.xxxx;
	vec4 x2 = x0 - i2 + C.yyyy;
	vec4 x3 = x0 - i3 + C.zzzz;
	vec4 x4 = x0 + C.wwww;
	
	// permutations
	i = mod289(i);
	float j0 = permute(permute(permute(permute(i.w) + i.z) + i.y) + i.x);
	vec4 j1 = permute(
		permute(
			permute(
				permute(i.w + vec4(i1.w, i2.w, i3.w, 1.0))
				+ i.z + vec4(i1.z, i2.z, i3.z, 1.0)
			)
			+ i.y + vec4(i1.y, i2.y, i3.y, 1.0)
		)
		+ i.x + vec4(i1.x, i2.x, i3.x, 1.0)
	);
	
	// gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope
	// 7*7*6 = 294, which is close to the ring size 17*17 = 289.
	vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0);
	
	vec4 p0 = grad4(j0, ip);
	vec4 p1 = grad4(j1.x, ip);
	vec4 p2 = grad4(j1.y, ip);
	vec4 p3 = grad4(j1.z, ip);
	vec4 p4 = grad4(j1.w, ip);
	
	// normalise gradients
	vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));
	p0 *= norm.x;
	p1 *= norm.y;
	p2 *= norm.z;
	p3 *= norm.w;
	p4 *= taylorInvSqrt(dot(p4,p4));
	
	// mix contributions from the five corners
	vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);
	vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)), 0.0);
	m0 = m0 * m0;
	m1 = m1 * m1;
	return 49.0 * (
		dot(
			m0*m0,
			vec3(dot(p0, x0), dot(p1, x1), dot(p2, x2))
		)
		+ dot(
			m1*m1,
			vec2(dot(p3, x3), dot(p4, x4))
		)
	);
}

vec3 simplexNoise3From4(vec4 x){
	float s = simplexNoise(vec4(x));
	float s1 = simplexNoise(vec4(x.y - 19.1 * 10, x.z + 33.4 * 10, x.x + 47.2 * 10, x.w + 65.4 * 10));
	float s2 = simplexNoise(vec4(x.z + 74.2 * 10, x.x - 124.5 * 10, x.y + 99.4 * 10, x.w + 113.4 * 10));
	return vec3(s, s1, s2);
}

vec2 simplexNoise2From3(vec3 x){
	float s = simplexNoise(vec3(x));
	float s1 = simplexNoise(vec3(x.y - 19.1 * 10, x.z + 33.4 * 10, x.x + 47.2 * 10));
	return vec2(s, s1);
}

#endif
#endif

void main() {
	vec4 color = texture2D(MAIN_BUFFER, texcoord) * vec4(glcolor, 1.0);
	#ifdef DEBUG_OUTPUT_ENABLED
		vec4 debugOutput = vec4(0.0, 0.0, 0.0, color.a);
	#endif
	
	
	// bloom value
	#if BLOOM_ENABLED == 1
		vec4 colorForBloom = color;
	#endif
	
	
	// main lighting
	color.rgb *= getBasicLighting(lmcoord.x, lmcoord.y  ARGS_IN);
	
	#if BLOOM_ENABLED == 1
		#ifdef OVERWORLD

#define import_ambientMoonPercent
#ifdef FIRST_PASS
float ambientMoonPercent = 0.0;
#endif
			float blockLight = lmcoord.x;
			float skyLight = lmcoord.y * (1.0 - ambientMoonPercent);
			colorForBloom.rgb *= max(blockLight * blockLight * 1.05, skyLight * 0.75);
		#elif defined NETHER
			colorForBloom.rgb *= lmcoord.x;
			colorForBloom.rgb *= dot(colorForBloom.rgb, vec3(0.92, 0.35, 0.07)) * 1.3;
		#endif
	#endif
	
	
	// show dangerous light
	#if SHOW_DANGEROUS_LIGHT == 1
		if (isDangerousLight > 0.0) {
			color.rgb = mix(color.rgb, vec3(1.0, 0.0, 0.0), 0.6);
		}
	#endif
	
	
	// rain reflection strength
	#if RAIN_REFLECTIONS_ENABLED == 1

#define import_cameraPosition
#ifdef FIRST_PASS
vec3 cameraPosition = vec3(0.0);
#endif
		float rainReflectionStrength = baseRainReflectionStrength;
		float noise = simplexNoise((worldPos + cameraPosition) * 0.2);
		noise = clamp(RAIN_REFLECTION_SLOPE * (noise - (1.0 - RAIN_REFLECTION_COVERAGE)) + 1.0, RAIN_REFLECTION_MIN, 1.0);
		rainReflectionStrength *= noise;
		rainReflectionStrength *= lmcoord.y * lmcoord.y * lmcoord.y;
	#else
		float rainReflectionStrength = 0.0;
	#endif
	
	
	// outputs
	
	#ifdef DEBUG_OUTPUT_ENABLED
		color = debugOutput;
	#endif
	
	/* DRAWBUFFERS:04 */
	gl_FragData[0] = color;
	gl_FragData[1] = vec4(normal, 1.0);
	
	#if BLOOM_ENABLED == 1 && defined REFLECTIONS_ENABLED
		/* DRAWBUFFERS:0423 */
		gl_FragData[2] = colorForBloom;
		gl_FragData[3] = vec4(RAIN_REFLECTION_STRENGTHS * rainReflectionStrength, 0.0, 1.0);
	#endif
	
	#if BLOOM_ENABLED == 1 && !defined REFLECTIONS_ENABLED
		/* DRAWBUFFERS:042 */
		gl_FragData[2] = colorForBloom;
	#endif
	
	#if BLOOM_ENABLED == 0 && defined REFLECTIONS_ENABLED
		/* DRAWBUFFERS:043 */
		gl_FragData[2] = vec4(RAIN_REFLECTION_STRENGTHS * rainReflectionStrength, 0.0, 1.0);
	#endif
	
}

#endif





#ifdef VSH

#if WAVING_ENABLED == 1
#ifdef FIRST_PASS
	const float[4] wavingScales = float[4] (0.0, WAVING_AMOUNT_1, WAVING_AMOUNT_2, WAVING_AMOUNT_3);
	const vec3 windDirection = vec3(1.0, 0.1, 0.3); // another way to think of it: weights for timePos influence
#endif



vec3 getWavingAddition(vec3 position  ARGS_OUT) {

#define import_cameraPosition
#ifdef FIRST_PASS
vec3 cameraPosition = vec3(0.0);
#endif
	vec3 worldPos = position + cameraPosition;

#define import_frameTimeCounter
#ifdef FIRST_PASS
float frameTimeCounter = 0.0;
#endif
	float timePos = frameTimeCounter + dot(worldPos, windDirection) * WAVING_WORLD_SCALE * 0.5;
	timePos *= WAVING_SPEED * 1.75;
	uint timePosFloor = uint(int(timePos));
	vec3 pos1 = randomVec3FromRValue(timePosFloor);
	vec3 pos2 = randomVec3FromRValue(timePosFloor + 1u);
	vec3 pos3 = randomVec3FromRValue(timePosFloor + 2u);
	vec3 pos4 = randomVec3FromRValue(timePosFloor + 3u);
	vec3 output = cubicInterpolate(pos1, pos2, pos3, pos4, mod(timePos, 1.0)) * vec3(1.0, 0.2, 1.0) * 0.08;
	#if HEIGHT_BASED_WAVING_ENABLED == 1
		const float lowY = 16.0;
		const float lowMult = 0.0;
		const float highY = 224.0;
		const float highMult = 2.0;
		output *= clamp((worldPos.y - lowY) * (highMult - lowMult) / (highY - lowY) + lowMult, 0.0, 1.75);
	#endif
	return output;
}



void applyWaving(inout vec3 position  ARGS_OUT) {

#define import_mc_Entity
#ifdef FIRST_PASS
vec3 mc_Entity = vec3(0.0);
#endif
	int rawWavingData = int(mc_Entity.x);
	if (rawWavingData < 1000) return;
	int wavingData = rawWavingData % 1000;
	if (wavingData < 2 || wavingData > 7) return;
	float wavingScale = wavingScales[wavingData / 2];

#define import_mc_midTexCoord
#ifdef FIRST_PASS
vec2 mc_midTexCoord = vec2(0.0);
#endif
	if (wavingData % 2 == 0 && gl_MultiTexCoord0.y > mc_midTexCoord.y) return; // don't apply waving to base
	#if !defined SHADER_SHADOW
		wavingScale *= lmcoord.y * lmcoord.y;
	#endif

#define import_betterRainStrength
#ifdef FIRST_PASS
float betterRainStrength = 0.0;
#endif
	wavingScale *= 1.0 + betterRainStrength * (WAVING_RAIN_MULT - 1.0);

#define import_ambientMoonPercent
#ifdef FIRST_PASS
float ambientMoonPercent = 0.0;
#endif
	wavingScale *= 1.0 - ambientMoonPercent * (1.0 - WAVING_NIGHT_MULT);
	position += getWavingAddition(position  ARGS_IN) * wavingScale;
}
#endif
#if ISOMETRIC_RENDERING_ENABLED == 1
//------------------------------------//
//        ISOMETRIC PROJECTION        //
//------------------------------------//

// This code was originally taken from XorDev's Ortho Shaderpack
// Link: https://github.com/XorDev/Ortho-Shaderpack/tree/master



vec4 projectIsometric(vec3 worldPos  ARGS_OUT) {
	const float scale = ISOMETRIC_WORLD_SCALE * 0.5;
	const float forwardPlusBackward = ISOMETRIC_FORWARD_VISIBILITY * 0.5 + ISOMETRIC_BACKWARD_VISIBILITY * 0.5;
	const float forwardMinusBackward = ISOMETRIC_FORWARD_VISIBILITY * 0.5 - ISOMETRIC_BACKWARD_VISIBILITY * 0.5;
	vec4 scaleVec = vec4(scale * aspectRatio, scale, -forwardPlusBackward, 1);
	const vec4 offsetVec = vec4(0, 0, forwardMinusBackward / forwardPlusBackward, 0);

#define import_gbufferModelView
#ifdef FIRST_PASS
mat4 gbufferModelView = mat4(0.0);
#endif
	return (gbufferModelView * vec4(worldPos, 1.0)) / scaleVec - offsetVec;
}
#endif
#if TAA_ENABLED == 1
void doTaaJitter(inout vec2 pos  ARGS_OUT) {

#define import_taaOffset
#ifdef FIRST_PASS
vec2 taaOffset = vec2(0.0);
#endif
	#if ISOMETRIC_RENDERING_ENABLED == 1
		pos += taaOffset * 0.5;
	#else
		pos += taaOffset * gl_Position.w;
	#endif
}
#endif

void main() {
	texcoord = (gl_TextureMatrix[0] * gl_MultiTexCoord0).xy;
	lmcoord  = (gl_TextureMatrix[1] * gl_MultiTexCoord1).xy;
	adjustLmcoord(lmcoord);
	
	
	#if RAIN_REFLECTIONS_ENABLED == 0
		vec3 worldPos;
	#endif

#define import_gbufferModelViewInverse
#ifdef FIRST_PASS
mat4 gbufferModelViewInverse = mat4(0.0);
#endif
	worldPos = endMat(gbufferModelViewInverse * (gl_ModelViewMatrix * gl_Vertex));
	
	
	#if WAVING_ENABLED == 1
		applyWaving(worldPos  ARGS_IN);
	#endif
	
	
	#if ISOMETRIC_RENDERING_ENABLED == 1
		gl_Position = projectIsometric(worldPos  ARGS_IN);
	#else

#define import_gbufferModelView
#ifdef FIRST_PASS
mat4 gbufferModelView = mat4(0.0);
#endif
		gl_Position = gl_ProjectionMatrix * gbufferModelView * startMat(worldPos);
	#endif
	
	
	#if ISOMETRIC_RENDERING_ENABLED == 0
		if (gl_Position.z < -1.5) return; // simple but effective optimization
	#endif
	
	
	#if TAA_ENABLED == 1
		doTaaJitter(gl_Position.xy  ARGS_IN);
	#endif
	
	
	glcolor = gl_Color.rgb;
	#if USE_SIMPLE_LIGHT == 1
		if (glcolor.r == glcolor.g && glcolor.g == glcolor.b) {
			glcolor = vec3(1.0);
		}
	#endif
	
	
	normal = gl_NormalMatrix * gl_Normal;
	
	
	#if RAIN_REFLECTIONS_ENABLED == 1

#define import_upPosition
#ifdef FIRST_PASS
vec3 upPosition = vec3(0.0);
#endif

#define import_rainReflectionStrength
#ifdef FIRST_PASS
float rainReflectionStrength = 0.0;
#endif
		baseRainReflectionStrength = dot(normalize(upPosition), normal) * 0.5 + 0.5;
		baseRainReflectionStrength *= baseRainReflectionStrength;
		baseRainReflectionStrength *= baseRainReflectionStrength;
		baseRainReflectionStrength *= baseRainReflectionStrength;
		baseRainReflectionStrength *= rainReflectionStrength;
	#endif
	
	
	#if SHOW_DANGEROUS_LIGHT == 1
		isDangerousLight = float(
			lmcoord.x < 0.51
			&& dot(normal, normalize(upPosition)) > 0.9
		);
	#endif
	
	
	doPreLighting(ARG_IN);
	
}

#endif
